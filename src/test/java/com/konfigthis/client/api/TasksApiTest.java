/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.PostTasksRequest;
import com.konfigthis.client.model.PostTasksRequestItem;
import com.konfigthis.client.model.Task;
import com.konfigthis.client.model.Tasks;
import com.konfigthis.client.model.TasksUpdateTaskConfigurationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
@Disabled
public class TasksApiTest {

    private static TasksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TasksApi(apiClient);
    }

    /**
     * Get task
     *
     * Retrieves information about a specific task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInfoTest() throws ApiException {
        String taskId = null;
        Task response = api.getInfo(taskId)
                .execute();
        // TODO: test validations
    }

    /**
     * List tasks on file
     *
     * Retrieves a list of all the tasks for a file. This endpoint does not support pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listOnFileTest() throws ApiException {
        String fileId = null;
        Tasks response = api.listOnFile(fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove task
     *
     * Removes a task from a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFileTest() throws ApiException {
        String taskId = null;
        api.removeFile(taskId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create task
     *
     * Creates a single task on a file. This task is not assigned to any user and will need to be assigned separately.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksTest() throws ApiException {
        PostTasksRequestItem item = null;
        String action = null;
        String message = null;
        OffsetDateTime dueAt = null;
        String completionRule = null;
        Task response = api.tasks(item)
                .action(action)
                .message(message)
                .dueAt(dueAt)
                .completionRule(completionRule)
                .execute();
        // TODO: test validations
    }

    /**
     * Update task
     *
     * Updates a task. This can be used to update a task&#39;s configuration, or to update its completion state.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTaskConfigurationTest() throws ApiException {
        String taskId = null;
        String action = null;
        String message = null;
        OffsetDateTime dueAt = null;
        String completionRule = null;
        Task response = api.updateTaskConfiguration(taskId)
                .action(action)
                .message(message)
                .dueAt(dueAt)
                .completionRule(completionRule)
                .execute();
        // TODO: test validations
    }

}
