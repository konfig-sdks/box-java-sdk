/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.TrashWebLink;
import com.konfigthis.client.model.TrashWebLinkRestored;
import com.konfigthis.client.model.TrashedWebLinksRestoreWebLinkRequest;
import com.konfigthis.client.model.TrashedWebLinksRestoreWebLinkRequestParent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrashedWebLinksApi
 */
@Disabled
public class TrashedWebLinksApiTest {

    private static TrashedWebLinksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TrashedWebLinksApi(apiClient);
    }

    /**
     * Get trashed web link
     *
     * Retrieves a web link that has been moved to the trash.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrashedLinkTest() throws ApiException {
        String webLinkId = null;
        List<String> fields = null;
        TrashWebLink response = api.getTrashedLink(webLinkId)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Permanently remove web link
     *
     * Permanently deletes a web link that is in the trash. This action cannot be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void permanentlyRemoveTest() throws ApiException {
        String webLinkId = null;
        api.permanentlyRemove(webLinkId)
                .execute();
        // TODO: test validations
    }

    /**
     * Restore web link
     *
     * Restores a web link that has been moved to the trash.  An optional new parent ID can be provided to restore the  web link to in case the original folder has been deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void restoreWebLinkTest() throws ApiException {
        String webLinkId = null;
        String name = null;
        TrashedWebLinksRestoreWebLinkRequestParent parent = null;
        List<String> fields = null;
        TrashWebLinkRestored response = api.restoreWebLink(webLinkId)
                .name(name)
                .parent(parent)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

}
