/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import java.io.File;
import com.konfigthis.client.model.ZipDownload;
import com.konfigthis.client.model.ZipDownloadRequest;
import com.konfigthis.client.model.ZipDownloadRequestItemsInner;
import com.konfigthis.client.model.ZipDownloadStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZipDownloadsApi
 */
@Disabled
public class ZipDownloadsApiTest {

    private static ZipDownloadsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ZipDownloadsApi(apiClient);
    }

    /**
     * Create zip download
     *
     * Creates a request to download multiple files and folders as a single &#x60;zip&#x60; archive file. This API does not return the archive but instead performs all the checks to ensure that the user has access to all the items, and then returns a &#x60;download_url&#x60; and a &#x60;status_url&#x60; that can be used to download the archive.  The limit for an archive is either the Account&#39;s upload limit or 10,000 files, whichever is met first.  **Note**: Downloading a large file can be affected by various factors such as distance, network latency, bandwidth, and congestion, as well as packet loss ratio and current server load. For these reasons we recommend that a maximum ZIP archive total size does not exceed 25GB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRequestTest() throws ApiException {
        List<ZipDownloadRequestItemsInner> items = null;
        String downloadFileName = null;
        ZipDownload response = api.createRequest(items)
                .downloadFileName(downloadFileName)
                .execute();
        // TODO: test validations
    }

    /**
     * Download zip archive
     *
     * Returns the contents of a &#x60;zip&#x60; archive in binary format. This URL does not require any form of authentication and could be used in a user&#39;s browser to download the archive to a user&#39;s device.  By default, this URL is only valid for a few seconds from the creation of the request for this archive. Once a download has started it can not be stopped and resumed, instead a new request for a zip archive would need to be created.  The URL of this endpoint should not be considered as fixed. Instead, use the [Create zip download](e://post_zip_downloads) API to request to create a &#x60;zip&#x60; archive, and then follow the &#x60;download_url&#x60; field in the response to this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContentByIdTest() throws ApiException {
        String zipDownloadId = null;
        File response = api.getContentById(zipDownloadId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get zip download status
     *
     * Returns the download status of a &#x60;zip&#x60; archive, allowing an application to inspect the progress of the download as well as the number of items that might have been skipped.  This endpoint can only be accessed once the download has started. Subsequently this endpoint is valid for 12 hours from the start of the download.  The URL of this endpoint should not be considered as fixed. Instead, use the [Create zip download](e://post_zip_downloads) API to request to create a &#x60;zip&#x60; archive, and then follow the &#x60;status_url&#x60; field in the response to this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatusTest() throws ApiException {
        String zipDownloadId = null;
        ZipDownloadStatus response = api.getStatus(zipDownloadId)
                .execute();
        // TODO: test validations
    }

}
