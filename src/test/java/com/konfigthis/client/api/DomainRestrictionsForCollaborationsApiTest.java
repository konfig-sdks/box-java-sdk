/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.CollaborationAllowlistEntries;
import com.konfigthis.client.model.CollaborationAllowlistEntry;
import com.konfigthis.client.model.DomainRestrictionsForCollaborationsAddAllowedDomainEntryRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainRestrictionsForCollaborationsApi
 */
@Disabled
public class DomainRestrictionsForCollaborationsApiTest {

    private static DomainRestrictionsForCollaborationsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new DomainRestrictionsForCollaborationsApi(apiClient);
    }

    /**
     * Add domain to list of allowed collaboration domains
     *
     * Creates a new entry in the list of allowed domains to allow collaboration for.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAllowedDomainEntryTest() throws ApiException {
        String domain = null;
        String direction = null;
        CollaborationAllowlistEntry response = api.addAllowedDomainEntry(domain, direction)
                .execute();
        // TODO: test validations
    }

    /**
     * Get allowed collaboration domain
     *
     * Returns a domain that has been deemed safe to create collaborations for within the current enterprise.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allowedCollaborationDomainTest() throws ApiException {
        String collaborationWhitelistEntryId = null;
        CollaborationAllowlistEntry response = api.allowedCollaborationDomain(collaborationWhitelistEntryId)
                .execute();
        // TODO: test validations
    }

    /**
     * List allowed collaboration domains
     *
     * Returns the list domains that have been deemed safe to create collaborations for within the current enterprise.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllowedCollaborationDomainsTest() throws ApiException {
        String marker = null;
        Long limit = null;
        CollaborationAllowlistEntries response = api.listAllowedCollaborationDomains()
                .marker(marker)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove domain from list of allowed collaboration domains
     *
     * Removes a domain from the list of domains that have been deemed safe to create collaborations for within the current enterprise.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeAllowedDomainEntryTest() throws ApiException {
        String collaborationWhitelistEntryId = null;
        api.removeAllowedDomainEntry(collaborationWhitelistEntryId)
                .execute();
        // TODO: test validations
    }

}
