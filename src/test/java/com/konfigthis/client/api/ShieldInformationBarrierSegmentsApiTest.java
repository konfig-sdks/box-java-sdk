/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.ShieldInformationBarrierBase;
import com.konfigthis.client.model.ShieldInformationBarrierSegment;
import com.konfigthis.client.model.ShieldInformationBarrierSegments;
import com.konfigthis.client.model.ShieldInformationBarrierSegmentsCreateSegmentRequest;
import com.konfigthis.client.model.ShieldInformationBarrierSegmentsUpdateByIdRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShieldInformationBarrierSegmentsApi
 */
@Disabled
public class ShieldInformationBarrierSegmentsApiTest {

    private static ShieldInformationBarrierSegmentsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ShieldInformationBarrierSegmentsApi(apiClient);
    }

    /**
     * Create shield information barrier segment
     *
     * Creates a shield information barrier segment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSegmentTest() throws ApiException {
        ShieldInformationBarrierBase shieldInformationBarrier = null;
        String name = null;
        String description = null;
        ShieldInformationBarrierSegment response = api.createSegment(shieldInformationBarrier, name)
                .description(description)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete shield information barrier segment
     *
     * Deletes the shield information barrier segment based on provided ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSegmentByIdTest() throws ApiException {
        String shieldInformationBarrierSegmentId = null;
        api.deleteSegmentById(shieldInformationBarrierSegmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get shield information barrier segment with specified ID
     *
     * Retrieves shield information barrier segment based on provided ID..
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String shieldInformationBarrierSegmentId = null;
        ShieldInformationBarrierSegment response = api.getById(shieldInformationBarrierSegmentId)
                .execute();
        // TODO: test validations
    }

    /**
     * List shield information barrier segments
     *
     * Retrieves a list of shield information barrier segment objects for the specified Information Barrier ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInformationObjectsTest() throws ApiException {
        String shieldInformationBarrierId = null;
        String marker = null;
        Long limit = null;
        ShieldInformationBarrierSegments response = api.listInformationObjects(shieldInformationBarrierId)
                .marker(marker)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Update shield information barrier segment with specified ID
     *
     * Updates the shield information barrier segment based on provided ID..
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        String shieldInformationBarrierSegmentId = null;
        String description = null;
        String name = null;
        ShieldInformationBarrierSegment response = api.updateById(shieldInformationBarrierSegmentId)
                .description(description)
                .name(name)
                .execute();
        // TODO: test validations
    }

}
