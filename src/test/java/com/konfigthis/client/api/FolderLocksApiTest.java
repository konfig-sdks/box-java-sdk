/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.FolderLock;
import com.konfigthis.client.model.FolderLocks;
import com.konfigthis.client.model.FolderLocksCreateRequest;
import com.konfigthis.client.model.FolderLocksCreateRequestFolder;
import com.konfigthis.client.model.FolderLocksCreateRequestLockedOperations;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FolderLocksApi
 */
@Disabled
public class FolderLocksApiTest {

    private static FolderLocksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FolderLocksApi(apiClient);
    }

    /**
     * Create folder lock
     *
     * Creates a folder lock on a folder, preventing it from being moved and/or deleted.  You must be authenticated as the owner or co-owner of the folder to use this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        FolderLocksCreateRequestFolder folder = null;
        FolderLocksCreateRequestLockedOperations lockedOperations = null;
        FolderLock response = api.create(folder)
                .lockedOperations(lockedOperations)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete folder lock
     *
     * Deletes a folder lock on a given folder.  You must be authenticated as the owner or co-owner of the folder to use this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFolderLockTest() throws ApiException {
        String folderLockId = null;
        api.deleteFolderLock(folderLockId)
                .execute();
        // TODO: test validations
    }

    /**
     * List folder locks
     *
     * Retrieves folder lock details for a given folder.  You must be authenticated as the owner or co-owner of the folder to use this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDetailsTest() throws ApiException {
        String folderId = null;
        FolderLocks response = api.listDetails(folderId)
                .execute();
        // TODO: test validations
    }

}
