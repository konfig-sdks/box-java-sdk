/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.FileVersionLegalHold;
import com.konfigthis.client.model.FileVersionLegalHolds;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileVersionLegalHoldsApi
 */
@Disabled
public class FileVersionLegalHoldsApiTest {

    private static FileVersionLegalHoldsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FileVersionLegalHoldsApi(apiClient);
    }

    /**
     * Get file version legal hold
     *
     * Retrieves information about the legal hold policies assigned to a file version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFileVersionLegalHoldInfoTest() throws ApiException {
        String fileVersionLegalHoldId = null;
        FileVersionLegalHold response = api.getFileVersionLegalHoldInfo(fileVersionLegalHoldId)
                .execute();
        // TODO: test validations
    }

    /**
     * List file version legal holds
     *
     * Get a list of file versions on legal hold for a legal hold assignment.  Due to ongoing re-architecture efforts this API might not return all file versions for this policy ID.  Instead, this API will only return file versions held in the legacy architecture. Two new endpoints will available to request any file versions held in the new architecture.  For file versions held in the new architecture, the &#x60;GET /legal_hold_policy_assignments/:id/file_versions_on_hold&#x60; API can be used to return all past file versions available for this policy assignment, and the &#x60;GET /legal_hold_policy_assignments/:id/files_on_hold&#x60; API can be used to return any current (latest) versions of a file under legal hold.  The &#x60;GET /legal_hold_policy_assignments?policy_id&#x3D;{id}&#x60; API can be used to find a list of policy assignments for a given policy ID.  Once the re-architecture is completed this API will be deprecated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFileVersionLegalHoldsTest() throws ApiException {
        String policyId = null;
        String marker = null;
        Long limit = null;
        FileVersionLegalHolds response = api.listFileVersionLegalHolds(policyId)
                .marker(marker)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

}
