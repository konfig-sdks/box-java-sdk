/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.FileFull;
import com.konfigthis.client.model.SharedLinksFilesAddSharedLinkToFileRequest;
import com.konfigthis.client.model.SharedLinksFilesAddSharedLinkToFileRequestSharedLink;
import com.konfigthis.client.model.SharedLinksFilesRemoveSharedLinkRequest;
import com.konfigthis.client.model.SharedLinksFilesUpdateLinkOnFileRequest;
import com.konfigthis.client.model.SharedLinksFilesUpdateLinkOnFileRequestSharedLink;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SharedLinksFilesApi
 */
@Disabled
public class SharedLinksFilesApiTest {

    private static SharedLinksFilesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SharedLinksFilesApi(apiClient);
    }

    /**
     * Add shared link to file
     *
     * Adds a shared link to a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSharedLinkToFileTest() throws ApiException {
        String fileId = null;
        String fields = null;
        SharedLinksFilesAddSharedLinkToFileRequestSharedLink sharedLink = null;
        FileFull response = api.addSharedLinkToFile(fileId, fields)
                .sharedLink(sharedLink)
                .execute();
        // TODO: test validations
    }

    /**
     * Find file for shared link
     *
     * Returns the file represented by a shared link.  A shared file can be represented by a shared link, which can originate within the current enterprise or within another.  This endpoint allows an application to retrieve information about a shared file when only given a shared link.  The &#x60;shared_link_permission_options&#x60; array field can be returned by requesting it in the &#x60;fields&#x60; query parameter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBySharedLinkTest() throws ApiException {
        String boxapi = null;
        String ifNoneMatch = null;
        List<String> fields = null;
        FileFull response = api.getBySharedLink(boxapi)
                .ifNoneMatch(ifNoneMatch)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get shared link for file
     *
     * Gets the information for a shared link on a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSharedLinkInfoTest() throws ApiException {
        String fileId = null;
        String fields = null;
        FileFull response = api.getSharedLinkInfo(fileId, fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove shared link from file
     *
     * Removes a shared link from a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSharedLinkTest() throws ApiException {
        String fileId = null;
        String fields = null;
        Object sharedLink = null;
        FileFull response = api.removeSharedLink(fileId, fields)
                .sharedLink(sharedLink)
                .execute();
        // TODO: test validations
    }

    /**
     * Update shared link on file
     *
     * Updates a shared link on a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLinkOnFileTest() throws ApiException {
        String fileId = null;
        String fields = null;
        SharedLinksFilesUpdateLinkOnFileRequestSharedLink sharedLink = null;
        FileFull response = api.updateLinkOnFile(fileId, fields)
                .sharedLink(sharedLink)
                .execute();
        // TODO: test validations
    }

}
