/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.LegalHoldPolicies;
import com.konfigthis.client.model.LegalHoldPoliciesCreateNewPolicyRequest;
import com.konfigthis.client.model.LegalHoldPoliciesUpdatePolicyRequest;
import com.konfigthis.client.model.LegalHoldPolicy;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LegalHoldPoliciesApi
 */
@Disabled
public class LegalHoldPoliciesApiTest {

    private static LegalHoldPoliciesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LegalHoldPoliciesApi(apiClient);
    }

    /**
     * Create legal hold policy
     *
     * Create a new legal hold policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewPolicyTest() throws ApiException {
        String policyName = null;
        String description = null;
        OffsetDateTime filterStartedAt = null;
        OffsetDateTime filterEndedAt = null;
        Boolean isOngoing = null;
        LegalHoldPolicy response = api.createNewPolicy(policyName)
                .description(description)
                .filterStartedAt(filterStartedAt)
                .filterEndedAt(filterEndedAt)
                .isOngoing(isOngoing)
                .execute();
        // TODO: test validations
    }

    /**
     * Get legal hold policy
     *
     * Retrieve a legal hold policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPolicyTest() throws ApiException {
        String legalHoldPolicyId = null;
        LegalHoldPolicy response = api.getPolicy(legalHoldPolicyId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all legal hold policies
     *
     * Retrieves a list of legal hold policies that belong to an enterprise.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        String policyName = null;
        List<String> fields = null;
        String marker = null;
        Long limit = null;
        LegalHoldPolicies response = api.listAll()
                .policyName(policyName)
                .fields(fields)
                .marker(marker)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove legal hold policy
     *
     * Delete an existing legal hold policy.  This is an asynchronous process. The policy will not be fully deleted yet when the response returns.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removePolicyTest() throws ApiException {
        String legalHoldPolicyId = null;
        api.removePolicy(legalHoldPolicyId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update legal hold policy
     *
     * Update legal hold policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePolicyTest() throws ApiException {
        String legalHoldPolicyId = null;
        String description = null;
        String policyName = null;
        String releaseNotes = null;
        LegalHoldPolicy response = api.updatePolicy(legalHoldPolicyId)
                .description(description)
                .policyName(policyName)
                .releaseNotes(releaseNotes)
                .execute();
        // TODO: test validations
    }

}
