/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.SkillCardsMetadata;
import com.konfigthis.client.model.SkillsApplyBoxSkillCardsRequest;
import com.konfigthis.client.model.SkillsUpdateAllBoxSkillCardsRequest;
import com.konfigthis.client.model.SkillsUpdateAllBoxSkillCardsRequestFile;
import com.konfigthis.client.model.SkillsUpdateAllBoxSkillCardsRequestFileVersion;
import com.konfigthis.client.model.SkillsUpdateAllBoxSkillCardsRequestMetadata;
import com.konfigthis.client.model.SkillsUpdateAllBoxSkillCardsRequestUsage;
import com.konfigthis.client.model.SkillsUpdateBoxSkillCardsOnFileRequestInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SkillsApi
 */
@Disabled
public class SkillsApiTest {

    private static SkillsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SkillsApi(apiClient);
    }

    /**
     * Create Box Skill cards on file
     *
     * Applies one or more Box Skills metadata cards to a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applyBoxSkillCardsTest() throws ApiException {
        List<Object> cards = null;
        String fileId = null;
        SkillCardsMetadata response = api.applyBoxSkillCards(cards, fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * List Box Skill cards on file
     *
     * List the Box Skills metadata cards that are attached to a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBoxSkillCardsTest() throws ApiException {
        String fileId = null;
        SkillCardsMetadata response = api.listBoxSkillCards(fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove Box Skill cards from file
     *
     * Removes any Box Skills cards metadata from a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeBoxSkillCardsTest() throws ApiException {
        String fileId = null;
        api.removeBoxSkillCards(fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update all Box Skill cards on file
     *
     * An alternative method that can be used to overwrite and update all Box Skill metadata cards on a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAllBoxSkillCardsTest() throws ApiException {
        String status = null;
        SkillsUpdateAllBoxSkillCardsRequestMetadata metadata = null;
        SkillsUpdateAllBoxSkillCardsRequestFile _file = null;
        String skillId = null;
        SkillsUpdateAllBoxSkillCardsRequestFileVersion fileVersion = null;
        SkillsUpdateAllBoxSkillCardsRequestUsage usage = null;
        api.updateAllBoxSkillCards(status, metadata, _file, skillId)
                .fileVersion(fileVersion)
                .usage(usage)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Box Skill cards on file
     *
     * Updates one or more Box Skills metadata cards to a file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoxSkillCardsOnFileTest() throws ApiException {
        String fileId = null;
        SkillCardsMetadata response = api.updateBoxSkillCardsOnFile(fileId)
                .execute();
        // TODO: test validations
    }

}
