/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.TrashFile;
import com.konfigthis.client.model.TrashFileRestored;
import com.konfigthis.client.model.TrashedFilesRestoreFileRequest;
import com.konfigthis.client.model.TrashedFilesRestoreFileRequestParent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrashedFilesApi
 */
@Disabled
public class TrashedFilesApiTest {

    private static TrashedFilesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TrashedFilesApi(apiClient);
    }

    /**
     * Get trashed file
     *
     * Retrieves a file that has been moved to the trash.  Please note that only if the file itself has been moved to the trash can it be retrieved with this API call. If instead one of its parent folders was moved to the trash, only that folder can be inspected using the [&#x60;GET /folders/:id/trash&#x60;](e://get_folders_id_trash) API.  To list all items that have been moved to the trash, please use the [&#x60;GET /folders/trash/items&#x60;](e://get-folders-trash-items/) API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFileTest() throws ApiException {
        String fileId = null;
        List<String> fields = null;
        TrashFile response = api.getFile(fileId)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Permanently remove file
     *
     * Permanently deletes a file that is in the trash. This action cannot be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void permanentlyRemoveFileTest() throws ApiException {
        String fileId = null;
        api.permanentlyRemoveFile(fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Restore file
     *
     * Restores a file that has been moved to the trash.  An optional new parent ID can be provided to restore the file to in case the original folder has been deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void restoreFileTest() throws ApiException {
        String fileId = null;
        String name = null;
        TrashedFilesRestoreFileRequestParent parent = null;
        List<String> fields = null;
        TrashFileRestored response = api.restoreFile(fileId)
                .name(name)
                .parent(parent)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

}
