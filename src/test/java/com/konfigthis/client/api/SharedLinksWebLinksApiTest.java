/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.SharedLinksWebLinksAddLinkToWebLinkRequest;
import com.konfigthis.client.model.SharedLinksWebLinksAddLinkToWebLinkRequestSharedLink;
import com.konfigthis.client.model.SharedLinksWebLinksRemoveSharedLinkRequest;
import com.konfigthis.client.model.SharedLinksWebLinksUpdateSharedLinkRequest;
import com.konfigthis.client.model.SharedLinksWebLinksUpdateSharedLinkRequestSharedLink;
import com.konfigthis.client.model.WebLink;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SharedLinksWebLinksApi
 */
@Disabled
public class SharedLinksWebLinksApiTest {

    private static SharedLinksWebLinksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SharedLinksWebLinksApi(apiClient);
    }

    /**
     * Add shared link to web link
     *
     * Adds a shared link to a web link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addLinkToWebLinkTest() throws ApiException {
        String webLinkId = null;
        String fields = null;
        SharedLinksWebLinksAddLinkToWebLinkRequestSharedLink sharedLink = null;
        WebLink response = api.addLinkToWebLink(webLinkId, fields)
                .sharedLink(sharedLink)
                .execute();
        // TODO: test validations
    }

    /**
     * Find web link for shared link
     *
     * Returns the web link represented by a shared link.  A shared web link can be represented by a shared link, which can originate within the current enterprise or within another.  This endpoint allows an application to retrieve information about a shared web link when only given a shared link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findSharedWebLinkTest() throws ApiException {
        String boxapi = null;
        String ifNoneMatch = null;
        List<String> fields = null;
        WebLink response = api.findSharedWebLink(boxapi)
                .ifNoneMatch(ifNoneMatch)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Get shared link for web link
     *
     * Gets the information for a shared link on a web link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLinkInfoTest() throws ApiException {
        String webLinkId = null;
        String fields = null;
        WebLink response = api.getLinkInfo(webLinkId, fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove shared link from web link
     *
     * Removes a shared link from a web link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSharedLinkTest() throws ApiException {
        String webLinkId = null;
        String fields = null;
        Object sharedLink = null;
        WebLink response = api.removeSharedLink(webLinkId, fields)
                .sharedLink(sharedLink)
                .execute();
        // TODO: test validations
    }

    /**
     * Update shared link on web link
     *
     * Updates a shared link on a web link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSharedLinkTest() throws ApiException {
        String webLinkId = null;
        String fields = null;
        SharedLinksWebLinksUpdateSharedLinkRequestSharedLink sharedLink = null;
        WebLink response = api.updateSharedLink(webLinkId, fields)
                .sharedLink(sharedLink)
                .execute();
        // TODO: test validations
    }

}
