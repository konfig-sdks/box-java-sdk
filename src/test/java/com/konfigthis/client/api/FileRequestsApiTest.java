/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.FileRequest;
import com.konfigthis.client.model.FileRequestCopyRequest;
import com.konfigthis.client.model.FileRequestCopyRequestAllOfFolder;
import com.konfigthis.client.model.FileRequestUpdateRequest;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileRequestsApi
 */
@Disabled
public class FileRequestsApiTest {

    private static FileRequestsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FileRequestsApi(apiClient);
    }

    /**
     * Copy file request
     *
     * Copies an existing file request that is already present on one folder, and applies it to another folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void copyRequestToFolderTest() throws ApiException {
        FileRequestCopyRequestAllOfFolder folder = null;
        String fileRequestId = null;
        String title = null;
        String description = null;
        String status = null;
        Boolean isEmailRequired = null;
        Boolean isDescriptionRequired = null;
        OffsetDateTime expiresAt = null;
        FileRequest response = api.copyRequestToFolder(folder, fileRequestId)
                .title(title)
                .description(description)
                .status(status)
                .isEmailRequired(isEmailRequired)
                .isDescriptionRequired(isDescriptionRequired)
                .expiresAt(expiresAt)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete file request
     *
     * Deletes a file request permanently.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePermanentlyTest() throws ApiException {
        String fileRequestId = null;
        api.deletePermanently(fileRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get file request
     *
     * Retrieves the information about a file request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInformationTest() throws ApiException {
        String fileRequestId = null;
        FileRequest response = api.getInformation(fileRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update file request
     *
     * Updates a file request. This can be used to activate or deactivate a file request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRequestTest() throws ApiException {
        String fileRequestId = null;
        String title = null;
        String description = null;
        String status = null;
        Boolean isEmailRequired = null;
        Boolean isDescriptionRequired = null;
        OffsetDateTime expiresAt = null;
        String ifMatch = null;
        FileRequest response = api.updateRequest(fileRequestId)
                .title(title)
                .description(description)
                .status(status)
                .isEmailRequired(isEmailRequired)
                .isDescriptionRequired(isDescriptionRequired)
                .expiresAt(expiresAt)
                .ifMatch(ifMatch)
                .execute();
        // TODO: test validations
    }

}
