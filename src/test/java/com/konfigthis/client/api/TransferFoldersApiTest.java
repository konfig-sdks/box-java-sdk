/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.FolderFull;
import com.konfigthis.client.model.TransferFoldersToDestinationRequest;
import com.konfigthis.client.model.TransferFoldersToDestinationRequestOwnedBy;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransferFoldersApi
 */
@Disabled
public class TransferFoldersApiTest {

    private static TransferFoldersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TransferFoldersApi(apiClient);
    }

    /**
     * Transfer owned folders
     *
     * Move all of the items (files, folders and workflows) owned by a user into another user&#39;s account  Only the root folder (&#x60;0&#x60;) can be transferred.  Folders can only be moved across users by users with administrative permissions.  All existing shared links and folder-level collaborations are transferred during the operation. Please note that while collaborations at the individual file-level are transferred during the operation, the collaborations are deleted when the original user is deleted.  This call will be performed synchronously which might lead to a slow response when the source user has a large number of items in all of its folders.  If the destination path has a metadata cascade policy attached to any of the parent folders, a metadata cascade operation will be kicked off asynchronously.  There is currently no way to check for when this operation is finished.  The destination folder&#39;s name will be in the format &#x60;{User}&#39;s Files and Folders&#x60;, where &#x60;{User}&#x60; is the display name of the user.  To make this API call your application will need to have the \&quot;Read and write all files and folders stored in Box\&quot; scope enabled.  Please make sure the destination user has access to &#x60;Relay&#x60; or &#x60;Relay Lite&#x60;, and has access to the files and folders involved in the workflows being transferred.  Admins will receive an email when the operation is completed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void toDestinationTest() throws ApiException {
        TransferFoldersToDestinationRequestOwnedBy ownedBy = null;
        String userId = null;
        List<String> fields = null;
        Boolean notify = null;
        FolderFull response = api.toDestination(ownedBy, userId)
                .fields(fields)
                .notify(notify)
                .execute();
        // TODO: test validations
    }

}
