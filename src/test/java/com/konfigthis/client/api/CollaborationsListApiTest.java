/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.Collaborations;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CollaborationsListApi
 */
@Disabled
public class CollaborationsListApiTest {

    private static CollaborationsListApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CollaborationsListApi(apiClient);
    }

    /**
     * List pending collaborations
     *
     * Retrieves all pending collaboration invites for this user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collaborationsTest() throws ApiException {
        String status = null;
        List<String> fields = null;
        Long offset = null;
        Long limit = null;
        Collaborations response = api.collaborations(status)
                .fields(fields)
                .offset(offset)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * List file collaborations
     *
     * Retrieves a list of pending and active collaborations for a file. This returns all the users that have access to the file or have been invited to the file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileAccessListTest() throws ApiException {
        String fileId = null;
        List<String> fields = null;
        Long limit = null;
        String marker = null;
        Collaborations response = api.fileAccessList(fileId)
                .fields(fields)
                .limit(limit)
                .marker(marker)
                .execute();
        // TODO: test validations
    }

    /**
     * List folder collaborations
     *
     * Retrieves a list of pending and active collaborations for a folder. This returns all the users that have access to the folder or have been invited to the folder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void folderAccessTest() throws ApiException {
        String folderId = null;
        List<String> fields = null;
        Collaborations response = api.folderAccess(folderId)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * List group collaborations
     *
     * Retrieves all the collaborations for a group. The user must have admin permissions to inspect enterprise&#39;s groups.  Each collaboration object has details on which files or folders the group has access to and with what role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groupAccessDetailsTest() throws ApiException {
        String groupId = null;
        Long limit = null;
        Long offset = null;
        Collaborations response = api.groupAccessDetails(groupId)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

}
