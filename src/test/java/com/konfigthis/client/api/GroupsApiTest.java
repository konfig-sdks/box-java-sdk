/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.GroupFull;
import com.konfigthis.client.model.Groups;
import com.konfigthis.client.model.GroupsUpdateGroupRequest;
import com.konfigthis.client.model.PostGroupsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Disabled
public class GroupsApiTest {

    private static GroupsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new GroupsApi(apiClient);
    }

    /**
     * Get group
     *
     * Retrieves information about a group. Only members of this group or users with admin-level permissions will be able to use this API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInfoTest() throws ApiException {
        String groupId = null;
        List<String> fields = null;
        GroupFull response = api.getInfo(groupId)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * List groups for enterprise
     *
     * Retrieves all of the groups for a given enterprise. The user must have admin permissions to inspect enterprise&#39;s groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groupsTest() throws ApiException {
        String filterTerm = null;
        List<String> fields = null;
        Long limit = null;
        Long offset = null;
        Groups response = api.groups()
                .filterTerm(filterTerm)
                .fields(fields)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Create group
     *
     * Creates a new group of users in an enterprise. Only users with admin permissions can create new groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void groups_0Test() throws ApiException {
        String name = null;
        String description = null;
        String provenance = null;
        String externalSyncIdentifier = null;
        String invitabilityLevel = null;
        String memberViewabilityLevel = null;
        List<String> fields = null;
        GroupFull response = api.groups_0(name)
                .description(description)
                .provenance(provenance)
                .externalSyncIdentifier(externalSyncIdentifier)
                .invitabilityLevel(invitabilityLevel)
                .memberViewabilityLevel(memberViewabilityLevel)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove group
     *
     * Permanently deletes a group. Only users with admin-level permissions will be able to use this API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeTest() throws ApiException {
        String groupId = null;
        api.remove(groupId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update group
     *
     * Updates a specific group. Only admins of this group or users with admin-level permissions will be able to use this API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupTest() throws ApiException {
        String groupId = null;
        String description = null;
        String name = null;
        String provenance = null;
        String externalSyncIdentifier = null;
        String invitabilityLevel = null;
        String memberViewabilityLevel = null;
        List<String> fields = null;
        GroupFull response = api.updateGroup(groupId)
                .description(description)
                .name(name)
                .provenance(provenance)
                .externalSyncIdentifier(externalSyncIdentifier)
                .invitabilityLevel(invitabilityLevel)
                .memberViewabilityLevel(memberViewabilityLevel)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

}
