/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.Collaboration;
import com.konfigthis.client.model.CollaborationsUpdateCollaborationRequest;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.PostCollaborationsRequest;
import com.konfigthis.client.model.PostCollaborationsRequestAccessibleBy;
import com.konfigthis.client.model.PostCollaborationsRequestItem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CollaborationsApi
 */
@Disabled
public class CollaborationsApiTest {

    private static CollaborationsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CollaborationsApi(apiClient);
    }

    /**
     * Create collaboration
     *
     * Adds a collaboration for a single user or a single group to a file or folder.  Collaborations can be created using email address, user IDs, or a group IDs.  If a collaboration is being created with a group, access to this endpoint is dependent on the group&#39;s ability to be invited.  If collaboration is in &#x60;pending&#x60; status, the following fields are redacted: - &#x60;login&#x60; and &#x60;name&#x60; are hidden if a collaboration was created using &#x60;user_id&#x60;, -  &#x60;name&#x60; is hidden if a collaboration was created using &#x60;login&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collaborationsTest() throws ApiException {
        PostCollaborationsRequestItem item = null;
        PostCollaborationsRequestAccessibleBy accessibleBy = null;
        String role = null;
        Boolean isAccessOnly = null;
        Boolean canViewPath = null;
        OffsetDateTime expiresAt = null;
        List<String> fields = null;
        Boolean notify = null;
        Collaboration response = api.collaborations(item, accessibleBy, role)
                .isAccessOnly(isAccessOnly)
                .canViewPath(canViewPath)
                .expiresAt(expiresAt)
                .fields(fields)
                .notify(notify)
                .execute();
        // TODO: test validations
    }

    /**
     * Get collaboration
     *
     * Retrieves a single collaboration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleCollaborationTest() throws ApiException {
        String collaborationId = null;
        List<String> fields = null;
        Collaboration response = api.getSingleCollaboration(collaborationId)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove collaboration
     *
     * Deletes a single collaboration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSingleCollaborationTest() throws ApiException {
        String collaborationId = null;
        api.removeSingleCollaboration(collaborationId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update collaboration
     *
     * Updates a collaboration. Can be used to change the owner of an item, or to accept collaboration invites.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCollaborationTest() throws ApiException {
        String role = null;
        String collaborationId = null;
        String status = null;
        OffsetDateTime expiresAt = null;
        Boolean canViewPath = null;
        Collaboration response = api.updateCollaboration(role, collaborationId)
                .status(status)
                .expiresAt(expiresAt)
                .canViewPath(canViewPath)
                .execute();
        // TODO: test validations
    }

}
