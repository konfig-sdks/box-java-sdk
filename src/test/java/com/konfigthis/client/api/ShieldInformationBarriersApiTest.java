/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.EnterpriseBase;
import com.konfigthis.client.model.ShieldInformationBarrier;
import com.konfigthis.client.model.ShieldInformationBarriers;
import com.konfigthis.client.model.ShieldInformationBarriersAddChangedStatusRequest;
import com.konfigthis.client.model.ShieldInformationBarriersCreateBarrierRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShieldInformationBarriersApi
 */
@Disabled
public class ShieldInformationBarriersApiTest {

    private static ShieldInformationBarriersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ShieldInformationBarriersApi(apiClient);
    }

    /**
     * Add changed status of shield information barrier with specified ID
     *
     * Change status of shield information barrier with the specified ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addChangedStatusTest() throws ApiException {
        String id = null;
        String status = null;
        ShieldInformationBarrier response = api.addChangedStatus(id, status)
                .execute();
        // TODO: test validations
    }

    /**
     * Create shield information barrier
     *
     * Creates a shield information barrier to separate individuals/groups within the same firm and prevents confidential information passing between them.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBarrierTest() throws ApiException {
        EnterpriseBase enterprise = null;
        ShieldInformationBarrier response = api.createBarrier(enterprise)
                .execute();
        // TODO: test validations
    }

    /**
     * Get shield information barrier with specified ID
     *
     * Get shield information barrier based on provided ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String shieldInformationBarrierId = null;
        ShieldInformationBarrier response = api.getById(shieldInformationBarrierId)
                .execute();
        // TODO: test validations
    }

    /**
     * List shield information barriers
     *
     * Retrieves a list of shield information barrier objects for the enterprise of JWT.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInformationObjectsTest() throws ApiException {
        String marker = null;
        Long limit = null;
        ShieldInformationBarriers response = api.listInformationObjects()
                .marker(marker)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

}
