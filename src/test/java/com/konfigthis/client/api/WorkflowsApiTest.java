/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.Outcome;
import com.konfigthis.client.model.Workflows;
import com.konfigthis.client.model.WorkflowsStartBasedOnRequestRequest;
import com.konfigthis.client.model.WorkflowsStartBasedOnRequestRequestFilesInner;
import com.konfigthis.client.model.WorkflowsStartBasedOnRequestRequestFlow;
import com.konfigthis.client.model.WorkflowsStartBasedOnRequestRequestFolder;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowsApi
 */
@Disabled
public class WorkflowsApiTest {

    private static WorkflowsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WorkflowsApi(apiClient);
    }

    /**
     * Starts workflow based on request body
     *
     * Initiates a flow with a trigger type of &#x60;WORKFLOW_MANUAL_START&#x60;.  You application must be authorized to use the &#x60;Manage Box Relay&#x60; application scope within the developer console.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startBasedOnRequestTest() throws ApiException {
        WorkflowsStartBasedOnRequestRequestFlow flow = null;
        List<WorkflowsStartBasedOnRequestRequestFilesInner> files = null;
        WorkflowsStartBasedOnRequestRequestFolder folder = null;
        String workflowId = null;
        String type = null;
        List<Outcome> outcomes = null;
        api.startBasedOnRequest(flow, files, folder, workflowId)
                .type(type)
                .outcomes(outcomes)
                .execute();
        // TODO: test validations
    }

    /**
     * List workflows
     *
     * Returns list of workflows that act on a given &#x60;folder ID&#x60;, and have a flow with a trigger type of &#x60;WORKFLOW_MANUAL_START&#x60;.  You application must be authorized to use the &#x60;Manage Box Relay&#x60; application scope within the developer console in to use this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void workflowsTest() throws ApiException {
        String folderId = null;
        String triggerType = null;
        Long limit = null;
        String marker = null;
        Workflows response = api.workflows(folderId)
                .triggerType(triggerType)
                .limit(limit)
                .marker(marker)
                .execute();
        // TODO: test validations
    }

}
