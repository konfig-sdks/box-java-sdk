/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.ClientError;
import com.konfigthis.client.model.ShieldInformationBarrierBase;
import com.konfigthis.client.model.ShieldInformationBarrierSegmentMember;
import com.konfigthis.client.model.ShieldInformationBarrierSegmentMembers;
import com.konfigthis.client.model.ShieldInformationBarrierSegmentMembersCreateNewMemberRequest;
import com.konfigthis.client.model.ShieldInformationBarrierSegmentMembersCreateNewMemberRequestShieldInformationBarrierSegment;
import com.konfigthis.client.model.UserBase;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class ShieldInformationBarrierSegmentMembersApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ShieldInformationBarrierSegmentMembersApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public ShieldInformationBarrierSegmentMembersApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call createNewMemberCall(ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = shieldInformationBarrierSegmentMembersCreateNewMemberRequest;

        // create path and map variables
        String localVarPath = "/shield_information_barrier_segment_members";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2Security" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createNewMemberValidateBeforeCall(ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest, final ApiCallback _callback) throws ApiException {
        return createNewMemberCall(shieldInformationBarrierSegmentMembersCreateNewMemberRequest, _callback);

    }


    private ApiResponse<ShieldInformationBarrierSegmentMember> createNewMemberWithHttpInfo(ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest) throws ApiException {
        okhttp3.Call localVarCall = createNewMemberValidateBeforeCall(shieldInformationBarrierSegmentMembersCreateNewMemberRequest, null);
        Type localVarReturnType = new TypeToken<ShieldInformationBarrierSegmentMember>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call createNewMemberAsync(ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest, final ApiCallback<ShieldInformationBarrierSegmentMember> _callback) throws ApiException {

        okhttp3.Call localVarCall = createNewMemberValidateBeforeCall(shieldInformationBarrierSegmentMembersCreateNewMemberRequest, _callback);
        Type localVarReturnType = new TypeToken<ShieldInformationBarrierSegmentMember>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class CreateNewMemberRequestBuilder {
        private final ShieldInformationBarrierSegmentMembersCreateNewMemberRequestShieldInformationBarrierSegment shieldInformationBarrierSegment;
        private final UserBase user;
        private String type;
        private ShieldInformationBarrierBase shieldInformationBarrier;

        private CreateNewMemberRequestBuilder(ShieldInformationBarrierSegmentMembersCreateNewMemberRequestShieldInformationBarrierSegment shieldInformationBarrierSegment, UserBase user) {
            this.shieldInformationBarrierSegment = shieldInformationBarrierSegment;
            this.user = user;
        }

        /**
         * Set type
         * @param type -| A type of the shield barrier segment member. (optional)
         * @return CreateNewMemberRequestBuilder
         */
        public CreateNewMemberRequestBuilder type(String type) {
            this.type = type;
            return this;
        }
        
        /**
         * Set shieldInformationBarrier
         * @param shieldInformationBarrier  (optional)
         * @return CreateNewMemberRequestBuilder
         */
        public CreateNewMemberRequestBuilder shieldInformationBarrier(ShieldInformationBarrierBase shieldInformationBarrier) {
            this.shieldInformationBarrier = shieldInformationBarrier;
            return this;
        }
        
        /**
         * Build call for createNewMember
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Returns a new shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest = buildBodyParams();
            return createNewMemberCall(shieldInformationBarrierSegmentMembersCreateNewMemberRequest, _callback);
        }

        private ShieldInformationBarrierSegmentMembersCreateNewMemberRequest buildBodyParams() {
            ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest = new ShieldInformationBarrierSegmentMembersCreateNewMemberRequest();
            if (this.type != null)
            shieldInformationBarrierSegmentMembersCreateNewMemberRequest.type(ShieldInformationBarrierSegmentMembersCreateNewMemberRequest.TypeEnum.fromValue(this.type));
            shieldInformationBarrierSegmentMembersCreateNewMemberRequest.shieldInformationBarrier(this.shieldInformationBarrier);
            shieldInformationBarrierSegmentMembersCreateNewMemberRequest.shieldInformationBarrierSegment(this.shieldInformationBarrierSegment);
            shieldInformationBarrierSegmentMembersCreateNewMemberRequest.user(this.user);
            return shieldInformationBarrierSegmentMembersCreateNewMemberRequest;
        }

        /**
         * Execute createNewMember request
         * @return ShieldInformationBarrierSegmentMember
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Returns a new shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public ShieldInformationBarrierSegmentMember execute() throws ApiException {
            ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest = buildBodyParams();
            ApiResponse<ShieldInformationBarrierSegmentMember> localVarResp = createNewMemberWithHttpInfo(shieldInformationBarrierSegmentMembersCreateNewMemberRequest);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute createNewMember request with HTTP info returned
         * @return ApiResponse&lt;ShieldInformationBarrierSegmentMember&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Returns a new shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<ShieldInformationBarrierSegmentMember> executeWithHttpInfo() throws ApiException {
            ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest = buildBodyParams();
            return createNewMemberWithHttpInfo(shieldInformationBarrierSegmentMembersCreateNewMemberRequest);
        }

        /**
         * Execute createNewMember request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Returns a new shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<ShieldInformationBarrierSegmentMember> _callback) throws ApiException {
            ShieldInformationBarrierSegmentMembersCreateNewMemberRequest shieldInformationBarrierSegmentMembersCreateNewMemberRequest = buildBodyParams();
            return createNewMemberAsync(shieldInformationBarrierSegmentMembersCreateNewMemberRequest, _callback);
        }
    }

    /**
     * Create shield information barrier segment member
     * Creates a new shield information barrier segment member.
     * @return CreateNewMemberRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Returns a new shield information barrier segment member object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
     </table>
     */
    public CreateNewMemberRequestBuilder createNewMember(ShieldInformationBarrierSegmentMembersCreateNewMemberRequestShieldInformationBarrierSegment shieldInformationBarrierSegment, UserBase user) throws IllegalArgumentException {
        if (shieldInformationBarrierSegment == null) throw new IllegalArgumentException("\"shieldInformationBarrierSegment\" is required but got null");
        if (user == null) throw new IllegalArgumentException("\"user\" is required but got null");
        return new CreateNewMemberRequestBuilder(shieldInformationBarrierSegment, user);
    }
    private okhttp3.Call getByIdCall(String shieldInformationBarrierSegmentMemberId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/shield_information_barrier_segment_members/{shield_information_barrier_segment_member_id}"
            .replace("{" + "shield_information_barrier_segment_member_id" + "}", localVarApiClient.escapeString(shieldInformationBarrierSegmentMemberId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2Security" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getByIdValidateBeforeCall(String shieldInformationBarrierSegmentMemberId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'shieldInformationBarrierSegmentMemberId' is set
        if (shieldInformationBarrierSegmentMemberId == null) {
            throw new ApiException("Missing the required parameter 'shieldInformationBarrierSegmentMemberId' when calling getById(Async)");
        }

        return getByIdCall(shieldInformationBarrierSegmentMemberId, _callback);

    }


    private ApiResponse<ShieldInformationBarrierSegmentMember> getByIdWithHttpInfo(String shieldInformationBarrierSegmentMemberId) throws ApiException {
        okhttp3.Call localVarCall = getByIdValidateBeforeCall(shieldInformationBarrierSegmentMemberId, null);
        Type localVarReturnType = new TypeToken<ShieldInformationBarrierSegmentMember>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getByIdAsync(String shieldInformationBarrierSegmentMemberId, final ApiCallback<ShieldInformationBarrierSegmentMember> _callback) throws ApiException {

        okhttp3.Call localVarCall = getByIdValidateBeforeCall(shieldInformationBarrierSegmentMemberId, _callback);
        Type localVarReturnType = new TypeToken<ShieldInformationBarrierSegmentMember>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetByIdRequestBuilder {
        private final String shieldInformationBarrierSegmentMemberId;

        private GetByIdRequestBuilder(String shieldInformationBarrierSegmentMemberId) {
            this.shieldInformationBarrierSegmentMemberId = shieldInformationBarrierSegmentMemberId;
        }

        /**
         * Build call for getById
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns the shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getByIdCall(shieldInformationBarrierSegmentMemberId, _callback);
        }


        /**
         * Execute getById request
         * @return ShieldInformationBarrierSegmentMember
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns the shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public ShieldInformationBarrierSegmentMember execute() throws ApiException {
            ApiResponse<ShieldInformationBarrierSegmentMember> localVarResp = getByIdWithHttpInfo(shieldInformationBarrierSegmentMemberId);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getById request with HTTP info returned
         * @return ApiResponse&lt;ShieldInformationBarrierSegmentMember&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns the shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<ShieldInformationBarrierSegmentMember> executeWithHttpInfo() throws ApiException {
            return getByIdWithHttpInfo(shieldInformationBarrierSegmentMemberId);
        }

        /**
         * Execute getById request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns the shield information barrier segment member object. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<ShieldInformationBarrierSegmentMember> _callback) throws ApiException {
            return getByIdAsync(shieldInformationBarrierSegmentMemberId, _callback);
        }
    }

    /**
     * Get shield information barrier segment member by ID
     * Retrieves a shield information barrier segment member by its ID.
     * @param shieldInformationBarrierSegmentMemberId The ID of the shield information barrier segment Member. (required)
     * @return GetByIdRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns the shield information barrier segment member object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
     </table>
     */
    public GetByIdRequestBuilder getById(String shieldInformationBarrierSegmentMemberId) throws IllegalArgumentException {
        if (shieldInformationBarrierSegmentMemberId == null) throw new IllegalArgumentException("\"shieldInformationBarrierSegmentMemberId\" is required but got null");
            

        return new GetByIdRequestBuilder(shieldInformationBarrierSegmentMemberId);
    }
    private okhttp3.Call listSegmentMembersBasedOnIdsCall(String shieldInformationBarrierSegmentId, String marker, Long limit, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/shield_information_barrier_segment_members";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (shieldInformationBarrierSegmentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("shield_information_barrier_segment_id", shieldInformationBarrierSegmentId));
        }

        if (marker != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("marker", marker));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2Security" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listSegmentMembersBasedOnIdsValidateBeforeCall(String shieldInformationBarrierSegmentId, String marker, Long limit, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'shieldInformationBarrierSegmentId' is set
        if (shieldInformationBarrierSegmentId == null) {
            throw new ApiException("Missing the required parameter 'shieldInformationBarrierSegmentId' when calling listSegmentMembersBasedOnIds(Async)");
        }

        return listSegmentMembersBasedOnIdsCall(shieldInformationBarrierSegmentId, marker, limit, _callback);

    }


    private ApiResponse<ShieldInformationBarrierSegmentMembers> listSegmentMembersBasedOnIdsWithHttpInfo(String shieldInformationBarrierSegmentId, String marker, Long limit) throws ApiException {
        okhttp3.Call localVarCall = listSegmentMembersBasedOnIdsValidateBeforeCall(shieldInformationBarrierSegmentId, marker, limit, null);
        Type localVarReturnType = new TypeToken<ShieldInformationBarrierSegmentMembers>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listSegmentMembersBasedOnIdsAsync(String shieldInformationBarrierSegmentId, String marker, Long limit, final ApiCallback<ShieldInformationBarrierSegmentMembers> _callback) throws ApiException {

        okhttp3.Call localVarCall = listSegmentMembersBasedOnIdsValidateBeforeCall(shieldInformationBarrierSegmentId, marker, limit, _callback);
        Type localVarReturnType = new TypeToken<ShieldInformationBarrierSegmentMembers>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListSegmentMembersBasedOnIdsRequestBuilder {
        private final String shieldInformationBarrierSegmentId;
        private String marker;
        private Long limit;

        private ListSegmentMembersBasedOnIdsRequestBuilder(String shieldInformationBarrierSegmentId) {
            this.shieldInformationBarrierSegmentId = shieldInformationBarrierSegmentId;
        }

        /**
         * Set marker
         * @param marker Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires &#x60;usemarker&#x60; to be set to &#x60;true&#x60;. (optional)
         * @return ListSegmentMembersBasedOnIdsRequestBuilder
         */
        public ListSegmentMembersBasedOnIdsRequestBuilder marker(String marker) {
            this.marker = marker;
            return this;
        }
        
        /**
         * Set limit
         * @param limit The maximum number of items to return per page. (optional)
         * @return ListSegmentMembersBasedOnIdsRequestBuilder
         */
        public ListSegmentMembersBasedOnIdsRequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Build call for listSegmentMembersBasedOnIds
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns a paginated list of shield information barrier segment member objects. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listSegmentMembersBasedOnIdsCall(shieldInformationBarrierSegmentId, marker, limit, _callback);
        }


        /**
         * Execute listSegmentMembersBasedOnIds request
         * @return ShieldInformationBarrierSegmentMembers
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns a paginated list of shield information barrier segment member objects. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public ShieldInformationBarrierSegmentMembers execute() throws ApiException {
            ApiResponse<ShieldInformationBarrierSegmentMembers> localVarResp = listSegmentMembersBasedOnIdsWithHttpInfo(shieldInformationBarrierSegmentId, marker, limit);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listSegmentMembersBasedOnIds request with HTTP info returned
         * @return ApiResponse&lt;ShieldInformationBarrierSegmentMembers&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns a paginated list of shield information barrier segment member objects. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<ShieldInformationBarrierSegmentMembers> executeWithHttpInfo() throws ApiException {
            return listSegmentMembersBasedOnIdsWithHttpInfo(shieldInformationBarrierSegmentId, marker, limit);
        }

        /**
         * Execute listSegmentMembersBasedOnIds request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Returns a paginated list of shield information barrier segment member objects. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<ShieldInformationBarrierSegmentMembers> _callback) throws ApiException {
            return listSegmentMembersBasedOnIdsAsync(shieldInformationBarrierSegmentId, marker, limit, _callback);
        }
    }

    /**
     * List shield information barrier segment members
     * Lists shield information barrier segment members based on provided segment IDs.
     * @param shieldInformationBarrierSegmentId The ID of the shield information barrier segment. (required)
     * @return ListSegmentMembersBasedOnIdsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns a paginated list of shield information barrier segment member objects. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
     </table>
     */
    public ListSegmentMembersBasedOnIdsRequestBuilder listSegmentMembersBasedOnIds(String shieldInformationBarrierSegmentId) throws IllegalArgumentException {
        if (shieldInformationBarrierSegmentId == null) throw new IllegalArgumentException("\"shieldInformationBarrierSegmentId\" is required but got null");
            

        return new ListSegmentMembersBasedOnIdsRequestBuilder(shieldInformationBarrierSegmentId);
    }
    private okhttp3.Call removeByIdCall(String shieldInformationBarrierSegmentMemberId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/shield_information_barrier_segment_members/{shield_information_barrier_segment_member_id}"
            .replace("{" + "shield_information_barrier_segment_member_id" + "}", localVarApiClient.escapeString(shieldInformationBarrierSegmentMemberId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2Security" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeByIdValidateBeforeCall(String shieldInformationBarrierSegmentMemberId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'shieldInformationBarrierSegmentMemberId' is set
        if (shieldInformationBarrierSegmentMemberId == null) {
            throw new ApiException("Missing the required parameter 'shieldInformationBarrierSegmentMemberId' when calling removeById(Async)");
        }

        return removeByIdCall(shieldInformationBarrierSegmentMemberId, _callback);

    }


    private ApiResponse<Void> removeByIdWithHttpInfo(String shieldInformationBarrierSegmentMemberId) throws ApiException {
        okhttp3.Call localVarCall = removeByIdValidateBeforeCall(shieldInformationBarrierSegmentMemberId, null);
        return localVarApiClient.execute(localVarCall);
    }

    private okhttp3.Call removeByIdAsync(String shieldInformationBarrierSegmentMemberId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeByIdValidateBeforeCall(shieldInformationBarrierSegmentMemberId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }

    public class RemoveByIdRequestBuilder {
        private final String shieldInformationBarrierSegmentMemberId;

        private RemoveByIdRequestBuilder(String shieldInformationBarrierSegmentMemberId) {
            this.shieldInformationBarrierSegmentMemberId = shieldInformationBarrierSegmentMemberId;
        }

        /**
         * Build call for removeById
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 204 </td><td> Returns an empty response if the segment member was deleted successfully. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return removeByIdCall(shieldInformationBarrierSegmentMemberId, _callback);
        }


        /**
         * Execute removeById request
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 204 </td><td> Returns an empty response if the segment member was deleted successfully. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public void execute() throws ApiException {
            removeByIdWithHttpInfo(shieldInformationBarrierSegmentMemberId);
        }

        /**
         * Execute removeById request with HTTP info returned
         * @return ApiResponse&lt;Void&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 204 </td><td> Returns an empty response if the segment member was deleted successfully. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Void> executeWithHttpInfo() throws ApiException {
            return removeByIdWithHttpInfo(shieldInformationBarrierSegmentMemberId);
        }

        /**
         * Execute removeById request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 204 </td><td> Returns an empty response if the segment member was deleted successfully. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Void> _callback) throws ApiException {
            return removeByIdAsync(shieldInformationBarrierSegmentMemberId, _callback);
        }
    }

    /**
     * Delete shield information barrier segment member by ID
     * Deletes a shield information barrier segment member based on provided ID.
     * @param shieldInformationBarrierSegmentMemberId The ID of the shield information barrier segment Member. (required)
     * @return RemoveByIdRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> Returns an empty response if the segment member was deleted successfully. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An unexpected client error. </td><td>  -  </td></tr>
     </table>
     */
    public RemoveByIdRequestBuilder removeById(String shieldInformationBarrierSegmentMemberId) throws IllegalArgumentException {
        if (shieldInformationBarrierSegmentMemberId == null) throw new IllegalArgumentException("\"shieldInformationBarrierSegmentMemberId\" is required but got null");
            

        return new RemoveByIdRequestBuilder(shieldInformationBarrierSegmentMemberId);
    }
}
