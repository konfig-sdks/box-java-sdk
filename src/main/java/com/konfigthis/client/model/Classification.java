/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * An instance of the classification metadata template, containing the classification applied to the file or folder.  To get more details about the classification applied to an item, request the classification metadata template.
 */
@ApiModel(description = "An instance of the classification metadata template, containing the classification applied to the file or folder.  To get more details about the classification applied to an item, request the classification metadata template.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Classification {
  public static final String SERIALIZED_NAME_BOX_SECURITY_CLASSIFICATION_KEY = "Box__Security__Classification__Key";
  @SerializedName(SERIALIZED_NAME_BOX_SECURITY_CLASSIFICATION_KEY)
  private String boxSecurityClassificationKey;

  public static final String SERIALIZED_NAME_$_PARENT = "$parent";
  @SerializedName(SERIALIZED_NAME_$_PARENT)
  private String $parent;

  /**
   * &#x60;securityClassification-6VMVochwUWo&#x60;
   */
  @JsonAdapter(TemplateEnum.Adapter.class)
 public enum TemplateEnum {
    SECURITYCLASSIFICATION_6VMVOCHWUWO("securityClassification-6VMVochwUWo");

    private String value;

    TemplateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TemplateEnum fromValue(String value) {
      for (TemplateEnum b : TemplateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TemplateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TemplateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TemplateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_$_TEMPLATE = "$template";
  @SerializedName(SERIALIZED_NAME_$_TEMPLATE)
  private TemplateEnum $template;

  public static final String SERIALIZED_NAME_$_SCOPE = "$scope";
  @SerializedName(SERIALIZED_NAME_$_SCOPE)
  private String $scope;

  public static final String SERIALIZED_NAME_$_VERSION = "$version";
  @SerializedName(SERIALIZED_NAME_$_VERSION)
  private Integer $version;

  public static final String SERIALIZED_NAME_$_TYPE = "$type";
  @SerializedName(SERIALIZED_NAME_$_TYPE)
  private String $type;

  public static final String SERIALIZED_NAME_$_TYPE_VERSION = "$typeVersion";
  @SerializedName(SERIALIZED_NAME_$_TYPE_VERSION)
  private Double $typeVersion;

  public static final String SERIALIZED_NAME_$_CAN_EDIT = "$canEdit";
  @SerializedName(SERIALIZED_NAME_$_CAN_EDIT)
  private Boolean $canEdit;

  public Classification() {
  }

  public Classification boxSecurityClassificationKey(String boxSecurityClassificationKey) {
    
    
    
    
    this.boxSecurityClassificationKey = boxSecurityClassificationKey;
    return this;
  }

   /**
   * The name of the classification applied to the item.
   * @return boxSecurityClassificationKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sensitive", value = "The name of the classification applied to the item.")

  public String getBoxSecurityClassificationKey() {
    return boxSecurityClassificationKey;
  }


  public void setBoxSecurityClassificationKey(String boxSecurityClassificationKey) {
    
    
    
    this.boxSecurityClassificationKey = boxSecurityClassificationKey;
  }


  public Classification $parent(String $parent) {
    
    
    
    
    this.$parent = $parent;
    return this;
  }

   /**
   * The identifier of the item that this metadata instance has been attached to. This combines the &#x60;type&#x60; and the &#x60;id&#x60; of the parent in the form &#x60;{type}_{id}&#x60;.
   * @return $parent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "folder_59449484661,", value = "The identifier of the item that this metadata instance has been attached to. This combines the `type` and the `id` of the parent in the form `{type}_{id}`.")

  public String get$Parent() {
    return $parent;
  }


  public void set$Parent(String $parent) {
    
    
    
    this.$parent = $parent;
  }


  public Classification $template(TemplateEnum $template) {
    
    
    
    
    this.$template = $template;
    return this;
  }

   /**
   * &#x60;securityClassification-6VMVochwUWo&#x60;
   * @return $template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SECURITYCLASSIFICATION_6VMVOCHWUWO", value = "`securityClassification-6VMVochwUWo`")

  public TemplateEnum get$Template() {
    return $template;
  }


  public void set$Template(TemplateEnum $template) {
    
    
    
    this.$template = $template;
  }


  public Classification $scope(String $scope) {
    
    
    
    
    this.$scope = $scope;
    return this;
  }

   /**
   * The scope of the enterprise that this classification has been applied for.  This will be in the format &#x60;enterprise_{enterprise_id}&#x60;.
   * @return $scope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "enterprise_27335", value = "The scope of the enterprise that this classification has been applied for.  This will be in the format `enterprise_{enterprise_id}`.")

  public String get$Scope() {
    return $scope;
  }


  public void set$Scope(String $scope) {
    
    
    
    this.$scope = $scope;
  }


  public Classification $version(Integer $version) {
    
    
    
    
    this.$version = $version;
    return this;
  }

   /**
   * The version of the metadata instance. This version starts at 0 and increases every time a classification is updated.
   * @return $version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The version of the metadata instance. This version starts at 0 and increases every time a classification is updated.")

  public Integer get$Version() {
    return $version;
  }


  public void set$Version(Integer $version) {
    
    
    
    this.$version = $version;
  }


  public Classification $type(String $type) {
    
    
    
    
    this.$type = $type;
    return this;
  }

   /**
   * The unique ID of this classification instance. This will be include the name of the classification template and a unique ID.
   * @return $type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "securityClassification-6VMVochwUWo-fd31537a-0f95-4d86-9f2b-5974a29978f8", value = "The unique ID of this classification instance. This will be include the name of the classification template and a unique ID.")

  public String get$Type() {
    return $type;
  }


  public void set$Type(String $type) {
    
    
    
    this.$type = $type;
  }


  public Classification $typeVersion(Double $typeVersion) {
    
    
    
    
    this.$typeVersion = $typeVersion;
    return this;
  }

  public Classification $typeVersion(Integer $typeVersion) {
    
    
    
    
    this.$typeVersion = $typeVersion.doubleValue();
    return this;
  }

   /**
   * The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use.
   * @return $typeVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use.")

  public Double get$TypeVersion() {
    return $typeVersion;
  }


  public void set$TypeVersion(Double $typeVersion) {
    
    
    
    this.$typeVersion = $typeVersion;
  }


  public Classification $canEdit(Boolean $canEdit) {
    
    
    
    
    this.$canEdit = $canEdit;
    return this;
  }

   /**
   * Whether an end user can change the classification.
   * @return $canEdit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether an end user can change the classification.")

  public Boolean get$CanEdit() {
    return $canEdit;
  }


  public void set$CanEdit(Boolean $canEdit) {
    
    
    
    this.$canEdit = $canEdit;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Classification instance itself
   */
  public Classification putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Classification classification = (Classification) o;
    return Objects.equals(this.boxSecurityClassificationKey, classification.boxSecurityClassificationKey) &&
        Objects.equals(this.$parent, classification.$parent) &&
        Objects.equals(this.$template, classification.$template) &&
        Objects.equals(this.$scope, classification.$scope) &&
        Objects.equals(this.$version, classification.$version) &&
        Objects.equals(this.$type, classification.$type) &&
        Objects.equals(this.$typeVersion, classification.$typeVersion) &&
        Objects.equals(this.$canEdit, classification.$canEdit)&&
        Objects.equals(this.additionalProperties, classification.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boxSecurityClassificationKey, $parent, $template, $scope, $version, $type, $typeVersion, $canEdit, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Classification {\n");
    sb.append("    boxSecurityClassificationKey: ").append(toIndentedString(boxSecurityClassificationKey)).append("\n");
    sb.append("    $parent: ").append(toIndentedString($parent)).append("\n");
    sb.append("    $template: ").append(toIndentedString($template)).append("\n");
    sb.append("    $scope: ").append(toIndentedString($scope)).append("\n");
    sb.append("    $version: ").append(toIndentedString($version)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("    $typeVersion: ").append(toIndentedString($typeVersion)).append("\n");
    sb.append("    $canEdit: ").append(toIndentedString($canEdit)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Box__Security__Classification__Key");
    openapiFields.add("$parent");
    openapiFields.add("$template");
    openapiFields.add("$scope");
    openapiFields.add("$version");
    openapiFields.add("$type");
    openapiFields.add("$typeVersion");
    openapiFields.add("$canEdit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Classification
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Classification.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Classification is not found in the empty JSON string", Classification.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("Box__Security__Classification__Key") != null && !jsonObj.get("Box__Security__Classification__Key").isJsonNull()) && !jsonObj.get("Box__Security__Classification__Key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Box__Security__Classification__Key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Box__Security__Classification__Key").toString()));
      }
      if ((jsonObj.get("$parent") != null && !jsonObj.get("$parent").isJsonNull()) && !jsonObj.get("$parent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$parent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$parent").toString()));
      }
      if ((jsonObj.get("$template") != null && !jsonObj.get("$template").isJsonNull()) && !jsonObj.get("$template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$template").toString()));
      }
      if ((jsonObj.get("$scope") != null && !jsonObj.get("$scope").isJsonNull()) && !jsonObj.get("$scope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$scope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$scope").toString()));
      }
      if ((jsonObj.get("$type") != null && !jsonObj.get("$type").isJsonNull()) && !jsonObj.get("$type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Classification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Classification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Classification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Classification.class));

       return (TypeAdapter<T>) new TypeAdapter<Classification>() {
           @Override
           public void write(JsonWriter out, Classification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Classification read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Classification instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Classification given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Classification
  * @throws IOException if the JSON string is invalid with respect to Classification
  */
  public static Classification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Classification.class);
  }

 /**
  * Convert an instance of Classification to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

