/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FileVersionMini;
import com.konfigthis.client.model.FolderAllOfFolderUploadEmail;
import com.konfigthis.client.model.FolderMini;
import com.konfigthis.client.model.Items;
import com.konfigthis.client.model.UserMini;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * RecentItemItem
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class RecentItemItem {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  /**
   * &#x60;web_link&#x60;
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    WEB_LINK("web_link");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_SEQUENCE_ID = "sequence_id";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_ID)
  private String sequenceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SHA1 = "sha1";
  @SerializedName(SERIALIZED_NAME_SHA1)
  private String sha1;

  public static final String SERIALIZED_NAME_FILE_VERSION = "file_version";
  @SerializedName(SERIALIZED_NAME_FILE_VERSION)
  private FileVersionMini fileVersion;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_PATH_COLLECTION = "path_collection";
  @SerializedName(SERIALIZED_NAME_PATH_COLLECTION)
  private Object pathCollection;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modified_at";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private OffsetDateTime modifiedAt;

  public static final String SERIALIZED_NAME_TRASHED_AT = "trashed_at";
  @SerializedName(SERIALIZED_NAME_TRASHED_AT)
  private OffsetDateTime trashedAt;

  public static final String SERIALIZED_NAME_PURGED_AT = "purged_at";
  @SerializedName(SERIALIZED_NAME_PURGED_AT)
  private OffsetDateTime purgedAt;

  public static final String SERIALIZED_NAME_CONTENT_CREATED_AT = "content_created_at";
  @SerializedName(SERIALIZED_NAME_CONTENT_CREATED_AT)
  private OffsetDateTime contentCreatedAt;

  public static final String SERIALIZED_NAME_CONTENT_MODIFIED_AT = "content_modified_at";
  @SerializedName(SERIALIZED_NAME_CONTENT_MODIFIED_AT)
  private OffsetDateTime contentModifiedAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserMini createdBy;

  public static final String SERIALIZED_NAME_MODIFIED_BY = "modified_by";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY)
  private UserMini modifiedBy;

  public static final String SERIALIZED_NAME_OWNED_BY = "owned_by";
  @SerializedName(SERIALIZED_NAME_OWNED_BY)
  private UserMini ownedBy;

  public static final String SERIALIZED_NAME_SHARED_LINK = "shared_link";
  @SerializedName(SERIALIZED_NAME_SHARED_LINK)
  private Object sharedLink;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private FolderMini parent;

  /**
   * Whether this item is deleted or not. Values include &#x60;active&#x60;, &#x60;trashed&#x60; if the file has been moved to the trash, and &#x60;deleted&#x60; if the file has been permanently deleted
   */
  @JsonAdapter(ItemStatusEnum.Adapter.class)
 public enum ItemStatusEnum {
    ACTIVE("active"),
    
    TRASHED("trashed"),
    
    DELETED("deleted");

    private String value;

    ItemStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ItemStatusEnum fromValue(String value) {
      for (ItemStatusEnum b : ItemStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ItemStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ItemStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ItemStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ItemStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ITEM_STATUS = "item_status";
  @SerializedName(SERIALIZED_NAME_ITEM_STATUS)
  private ItemStatusEnum itemStatus;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_VERSION_NUMBER = "version_number";
  @SerializedName(SERIALIZED_NAME_VERSION_NUMBER)
  private String versionNumber;

  public static final String SERIALIZED_NAME_COMMENT_COUNT = "comment_count";
  @SerializedName(SERIALIZED_NAME_COMMENT_COUNT)
  private Integer commentCount;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private Object permissions;

  public static final String SERIALIZED_NAME_LOCK = "lock";
  @SerializedName(SERIALIZED_NAME_LOCK)
  private Object lock;

  public static final String SERIALIZED_NAME_EXTENSION = "extension";
  @SerializedName(SERIALIZED_NAME_EXTENSION)
  private String extension;

  public static final String SERIALIZED_NAME_IS_PACKAGE = "is_package";
  @SerializedName(SERIALIZED_NAME_IS_PACKAGE)
  private Boolean isPackage;

  public static final String SERIALIZED_NAME_EXPIRING_EMBED_LINK = "expiring_embed_link";
  @SerializedName(SERIALIZED_NAME_EXPIRING_EMBED_LINK)
  private Object expiringEmbedLink;

  public static final String SERIALIZED_NAME_WATERMARK_INFO = "watermark_info";
  @SerializedName(SERIALIZED_NAME_WATERMARK_INFO)
  private Object watermarkInfo;

  /**
   * Specifies if the folder can be accessed with the direct shared link or a shared link to a parent folder.
   */
  @JsonAdapter(IsAccessibleViaSharedLinkEnum.Adapter.class)
 public enum IsAccessibleViaSharedLinkEnum {
    TRUE("true"),
    
    FALSE("false");

    private Boolean value;

    IsAccessibleViaSharedLinkEnum(Boolean value) {
      this.value = value;
    }

    public Boolean getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsAccessibleViaSharedLinkEnum fromValue(Boolean value) {
      for (IsAccessibleViaSharedLinkEnum b : IsAccessibleViaSharedLinkEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IsAccessibleViaSharedLinkEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsAccessibleViaSharedLinkEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsAccessibleViaSharedLinkEnum read(final JsonReader jsonReader) throws IOException {
        Boolean value =  jsonReader.nextBoolean();
        return IsAccessibleViaSharedLinkEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IS_ACCESSIBLE_VIA_SHARED_LINK = "is_accessible_via_shared_link";
  @SerializedName(SERIALIZED_NAME_IS_ACCESSIBLE_VIA_SHARED_LINK)
  private IsAccessibleViaSharedLinkEnum isAccessibleViaSharedLink;

  /**
   * Gets or Sets allowedInviteeRoles
   */
  @JsonAdapter(AllowedInviteeRolesEnum.Adapter.class)
 public enum AllowedInviteeRolesEnum {
    EDITOR("editor"),
    
    VIEWER("viewer"),
    
    PREVIEWER("previewer"),
    
    UPLOADER("uploader"),
    
    PREVIEWER_UPLOADER("previewer uploader"),
    
    VIEWER_UPLOADER("viewer uploader"),
    
    CO_OWNER("co-owner");

    private String value;

    AllowedInviteeRolesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AllowedInviteeRolesEnum fromValue(String value) {
      for (AllowedInviteeRolesEnum b : AllowedInviteeRolesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AllowedInviteeRolesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AllowedInviteeRolesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AllowedInviteeRolesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AllowedInviteeRolesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ALLOWED_INVITEE_ROLES = "allowed_invitee_roles";
  @SerializedName(SERIALIZED_NAME_ALLOWED_INVITEE_ROLES)
  private List<AllowedInviteeRolesEnum> allowedInviteeRoles = null;

  public static final String SERIALIZED_NAME_IS_EXTERNALLY_OWNED = "is_externally_owned";
  @SerializedName(SERIALIZED_NAME_IS_EXTERNALLY_OWNED)
  private Boolean isExternallyOwned;

  public static final String SERIALIZED_NAME_HAS_COLLABORATIONS = "has_collaborations";
  @SerializedName(SERIALIZED_NAME_HAS_COLLABORATIONS)
  private Boolean hasCollaborations;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map metadata;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expires_at";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  public static final String SERIALIZED_NAME_REPRESENTATIONS = "representations";
  @SerializedName(SERIALIZED_NAME_REPRESENTATIONS)
  private Object representations;

  public static final String SERIALIZED_NAME_CLASSIFICATION = "classification";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATION)
  private Object classification;

  public static final String SERIALIZED_NAME_UPLOADER_DISPLAY_NAME = "uploader_display_name";
  @SerializedName(SERIALIZED_NAME_UPLOADER_DISPLAY_NAME)
  private String uploaderDisplayName;

  public static final String SERIALIZED_NAME_DISPOSITION_AT = "disposition_at";
  @SerializedName(SERIALIZED_NAME_DISPOSITION_AT)
  private OffsetDateTime dispositionAt;

  /**
   * Gets or Sets sharedLinkPermissionOptions
   */
  @JsonAdapter(SharedLinkPermissionOptionsEnum.Adapter.class)
 public enum SharedLinkPermissionOptionsEnum {
    PREVIEW("can_preview"),
    
    DOWNLOAD("can_download"),
    
    EDIT("can_edit");

    private String value;

    SharedLinkPermissionOptionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SharedLinkPermissionOptionsEnum fromValue(String value) {
      for (SharedLinkPermissionOptionsEnum b : SharedLinkPermissionOptionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SharedLinkPermissionOptionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SharedLinkPermissionOptionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SharedLinkPermissionOptionsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SharedLinkPermissionOptionsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SHARED_LINK_PERMISSION_OPTIONS = "shared_link_permission_options";
  @SerializedName(SERIALIZED_NAME_SHARED_LINK_PERMISSION_OPTIONS)
  private List<SharedLinkPermissionOptionsEnum> sharedLinkPermissionOptions = null;

  public static final String SERIALIZED_NAME_FOLDER_UPLOAD_EMAIL = "folder_upload_email";
  @SerializedName(SERIALIZED_NAME_FOLDER_UPLOAD_EMAIL)
  private FolderAllOfFolderUploadEmail folderUploadEmail;

  public static final String SERIALIZED_NAME_ITEM_COLLECTION = "item_collection";
  @SerializedName(SERIALIZED_NAME_ITEM_COLLECTION)
  private Items itemCollection;

  public static final String SERIALIZED_NAME_SYNC_STATE = "sync_state";
  @SerializedName(SERIALIZED_NAME_SYNC_STATE)
  private String syncState;

  public static final String SERIALIZED_NAME_CAN_NON_OWNERS_INVITE = "can_non_owners_invite";
  @SerializedName(SERIALIZED_NAME_CAN_NON_OWNERS_INVITE)
  private Boolean canNonOwnersInvite;

  public static final String SERIALIZED_NAME_IS_COLLABORATION_RESTRICTED_TO_ENTERPRISE = "is_collaboration_restricted_to_enterprise";
  @SerializedName(SERIALIZED_NAME_IS_COLLABORATION_RESTRICTED_TO_ENTERPRISE)
  private Boolean isCollaborationRestrictedToEnterprise;

  /**
   * Gets or Sets allowedSharedLinkAccessLevels
   */
  @JsonAdapter(AllowedSharedLinkAccessLevelsEnum.Adapter.class)
 public enum AllowedSharedLinkAccessLevelsEnum {
    OPEN("open"),
    
    COMPANY("company"),
    
    COLLABORATORS("collaborators");

    private String value;

    AllowedSharedLinkAccessLevelsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AllowedSharedLinkAccessLevelsEnum fromValue(String value) {
      for (AllowedSharedLinkAccessLevelsEnum b : AllowedSharedLinkAccessLevelsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AllowedSharedLinkAccessLevelsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AllowedSharedLinkAccessLevelsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AllowedSharedLinkAccessLevelsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AllowedSharedLinkAccessLevelsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ALLOWED_SHARED_LINK_ACCESS_LEVELS = "allowed_shared_link_access_levels";
  @SerializedName(SERIALIZED_NAME_ALLOWED_SHARED_LINK_ACCESS_LEVELS)
  private List<AllowedSharedLinkAccessLevelsEnum> allowedSharedLinkAccessLevels = null;

  public static final String SERIALIZED_NAME_CAN_NON_OWNERS_VIEW_COLLABORATORS = "can_non_owners_view_collaborators";
  @SerializedName(SERIALIZED_NAME_CAN_NON_OWNERS_VIEW_COLLABORATORS)
  private Boolean canNonOwnersViewCollaborators;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public RecentItemItem() {
  }

  public RecentItemItem id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for this web link
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "11446498", required = true, value = "The unique identifier for this web link")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public RecentItemItem etag(String etag) {
    
    
    
    
    this.etag = etag;
    return this;
  }

   /**
   * The entity tag of this web link. Used with &#x60;If-Match&#x60; headers.
   * @return etag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The entity tag of this web link. Used with `If-Match` headers.")

  public String getEtag() {
    return etag;
  }


  public void setEtag(String etag) {
    
    
    
    this.etag = etag;
  }


  public RecentItemItem type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * &#x60;web_link&#x60;
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "WEB_LINK", required = true, value = "`web_link`")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }


  public RecentItemItem sequenceId(String sequenceId) {
    
    
    
    
    this.sequenceId = sequenceId;
    return this;
  }

   /**
   * Get sequenceId
   * @return sequenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSequenceId() {
    return sequenceId;
  }


  public void setSequenceId(String sequenceId) {
    
    
    
    this.sequenceId = sequenceId;
  }


  public RecentItemItem name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of the web link
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "My Bookmark", value = "The name of the web link")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public RecentItemItem sha1(String sha1) {
    
    
    
    
    this.sha1 = sha1;
    return this;
  }

   /**
   * The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file.
   * @return sha1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "85136C79CBF9FE36BB9D05D0639C70C265C18D37", value = "The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file.")

  public String getSha1() {
    return sha1;
  }


  public void setSha1(String sha1) {
    
    
    
    this.sha1 = sha1;
  }


  public RecentItemItem fileVersion(FileVersionMini fileVersion) {
    
    
    
    
    this.fileVersion = fileVersion;
    return this;
  }

   /**
   * Get fileVersion
   * @return fileVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FileVersionMini getFileVersion() {
    return fileVersion;
  }


  public void setFileVersion(FileVersionMini fileVersion) {
    
    
    
    this.fileVersion = fileVersion;
  }


  public RecentItemItem description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * The description accompanying the web link. This is visible within the Box web application.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Example page", value = "The description accompanying the web link. This is visible within the Box web application.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public RecentItemItem size(Long size) {
    
    
    
    
    this.size = size;
    return this;
  }

   /**
   * The folder size in bytes.  Be careful parsing this integer as its value can get very large.
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "629644", value = "The folder size in bytes.  Be careful parsing this integer as its value can get very large.")

  public Long getSize() {
    return size;
  }


  public void setSize(Long size) {
    
    
    
    this.size = size;
  }


  public RecentItemItem pathCollection(Object pathCollection) {
    
    
    
    
    this.pathCollection = pathCollection;
    return this;
  }

   /**
   * Get pathCollection
   * @return pathCollection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPathCollection() {
    return pathCollection;
  }


  public void setPathCollection(Object pathCollection) {
    
    
    
    this.pathCollection = pathCollection;
  }


  public RecentItemItem createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When this file was created on Box’s servers.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "When this file was created on Box’s servers.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public RecentItemItem modifiedAt(OffsetDateTime modifiedAt) {
    
    
    
    
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * When this file was last updated on the Box servers.
   * @return modifiedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "When this file was last updated on the Box servers.")

  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }


  public void setModifiedAt(OffsetDateTime modifiedAt) {
    
    
    
    this.modifiedAt = modifiedAt;
  }


  public RecentItemItem trashedAt(OffsetDateTime trashedAt) {
    
    
    
    
    this.trashedAt = trashedAt;
    return this;
  }

   /**
   * When this file was moved to the trash.
   * @return trashedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "When this file was moved to the trash.")

  public OffsetDateTime getTrashedAt() {
    return trashedAt;
  }


  public void setTrashedAt(OffsetDateTime trashedAt) {
    
    
    
    this.trashedAt = trashedAt;
  }


  public RecentItemItem purgedAt(OffsetDateTime purgedAt) {
    
    
    
    
    this.purgedAt = purgedAt;
    return this;
  }

   /**
   * When this file will be permanently deleted.
   * @return purgedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "When this file will be permanently deleted.")

  public OffsetDateTime getPurgedAt() {
    return purgedAt;
  }


  public void setPurgedAt(OffsetDateTime purgedAt) {
    
    
    
    this.purgedAt = purgedAt;
  }


  public RecentItemItem contentCreatedAt(OffsetDateTime contentCreatedAt) {
    
    
    
    
    this.contentCreatedAt = contentCreatedAt;
    return this;
  }

   /**
   * The date and time at which this folder was originally created.
   * @return contentCreatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "The date and time at which this folder was originally created.")

  public OffsetDateTime getContentCreatedAt() {
    return contentCreatedAt;
  }


  public void setContentCreatedAt(OffsetDateTime contentCreatedAt) {
    
    
    
    this.contentCreatedAt = contentCreatedAt;
  }


  public RecentItemItem contentModifiedAt(OffsetDateTime contentModifiedAt) {
    
    
    
    
    this.contentModifiedAt = contentModifiedAt;
    return this;
  }

   /**
   * The date and time at which this folder was last updated.
   * @return contentModifiedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "The date and time at which this folder was last updated.")

  public OffsetDateTime getContentModifiedAt() {
    return contentModifiedAt;
  }


  public void setContentModifiedAt(OffsetDateTime contentModifiedAt) {
    
    
    
    this.contentModifiedAt = contentModifiedAt;
  }


  public RecentItemItem createdBy(UserMini createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserMini getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(UserMini createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public RecentItemItem modifiedBy(UserMini modifiedBy) {
    
    
    
    
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserMini getModifiedBy() {
    return modifiedBy;
  }


  public void setModifiedBy(UserMini modifiedBy) {
    
    
    
    this.modifiedBy = modifiedBy;
  }


  public RecentItemItem ownedBy(UserMini ownedBy) {
    
    
    
    
    this.ownedBy = ownedBy;
    return this;
  }

   /**
   * Get ownedBy
   * @return ownedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserMini getOwnedBy() {
    return ownedBy;
  }


  public void setOwnedBy(UserMini ownedBy) {
    
    
    
    this.ownedBy = ownedBy;
  }


  public RecentItemItem sharedLink(Object sharedLink) {
    
    
    
    
    this.sharedLink = sharedLink;
    return this;
  }

   /**
   * Get sharedLink
   * @return sharedLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSharedLink() {
    return sharedLink;
  }


  public void setSharedLink(Object sharedLink) {
    
    
    
    this.sharedLink = sharedLink;
  }


  public RecentItemItem parent(FolderMini parent) {
    
    
    
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FolderMini getParent() {
    return parent;
  }


  public void setParent(FolderMini parent) {
    
    
    
    this.parent = parent;
  }


  public RecentItemItem itemStatus(ItemStatusEnum itemStatus) {
    
    
    
    
    this.itemStatus = itemStatus;
    return this;
  }

   /**
   * Whether this item is deleted or not. Values include &#x60;active&#x60;, &#x60;trashed&#x60; if the file has been moved to the trash, and &#x60;deleted&#x60; if the file has been permanently deleted
   * @return itemStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ACTIVE", value = "Whether this item is deleted or not. Values include `active`, `trashed` if the file has been moved to the trash, and `deleted` if the file has been permanently deleted")

  public ItemStatusEnum getItemStatus() {
    return itemStatus;
  }


  public void setItemStatus(ItemStatusEnum itemStatus) {
    
    
    
    this.itemStatus = itemStatus;
  }


  public RecentItemItem tags(List tags) {
    
    
    
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List getTags() {
    return tags;
  }


  public void setTags(List tags) {
    
    
    
    this.tags = tags;
  }


  public RecentItemItem versionNumber(String versionNumber) {
    
    
    
    
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * The version number of this file
   * @return versionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The version number of this file")

  public String getVersionNumber() {
    return versionNumber;
  }


  public void setVersionNumber(String versionNumber) {
    
    
    
    this.versionNumber = versionNumber;
  }


  public RecentItemItem commentCount(Integer commentCount) {
    
    
    
    
    this.commentCount = commentCount;
    return this;
  }

   /**
   * The number of comments on this file
   * @return commentCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "The number of comments on this file")

  public Integer getCommentCount() {
    return commentCount;
  }


  public void setCommentCount(Integer commentCount) {
    
    
    
    this.commentCount = commentCount;
  }


  public RecentItemItem permissions(Object permissions) {
    
    
    
    
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPermissions() {
    return permissions;
  }


  public void setPermissions(Object permissions) {
    
    
    
    this.permissions = permissions;
  }


  public RecentItemItem lock(Object lock) {
    
    
    
    
    this.lock = lock;
    return this;
  }

   /**
   * Get lock
   * @return lock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLock() {
    return lock;
  }


  public void setLock(Object lock) {
    
    
    
    this.lock = lock;
  }


  public RecentItemItem extension(String extension) {
    
    
    
    
    this.extension = extension;
    return this;
  }

   /**
   * Indicates the (optional) file extension for this file. By default, this is set to an empty string.
   * @return extension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pdf", value = "Indicates the (optional) file extension for this file. By default, this is set to an empty string.")

  public String getExtension() {
    return extension;
  }


  public void setExtension(String extension) {
    
    
    
    this.extension = extension;
  }


  public RecentItemItem isPackage(Boolean isPackage) {
    
    
    
    
    this.isPackage = isPackage;
    return this;
  }

   /**
   * Indicates if the file is a package. Packages are commonly used by Mac Applications and can include iWork files.
   * @return isPackage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if the file is a package. Packages are commonly used by Mac Applications and can include iWork files.")

  public Boolean getIsPackage() {
    return isPackage;
  }


  public void setIsPackage(Boolean isPackage) {
    
    
    
    this.isPackage = isPackage;
  }


  public RecentItemItem expiringEmbedLink(Object expiringEmbedLink) {
    
    
    
    
    this.expiringEmbedLink = expiringEmbedLink;
    return this;
  }

   /**
   * Get expiringEmbedLink
   * @return expiringEmbedLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getExpiringEmbedLink() {
    return expiringEmbedLink;
  }


  public void setExpiringEmbedLink(Object expiringEmbedLink) {
    
    
    
    this.expiringEmbedLink = expiringEmbedLink;
  }


  public RecentItemItem watermarkInfo(Object watermarkInfo) {
    
    
    
    
    this.watermarkInfo = watermarkInfo;
    return this;
  }

   /**
   * Get watermarkInfo
   * @return watermarkInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getWatermarkInfo() {
    return watermarkInfo;
  }


  public void setWatermarkInfo(Object watermarkInfo) {
    
    
    
    this.watermarkInfo = watermarkInfo;
  }


  public RecentItemItem isAccessibleViaSharedLink(IsAccessibleViaSharedLinkEnum isAccessibleViaSharedLink) {
    
    
    
    
    this.isAccessibleViaSharedLink = isAccessibleViaSharedLink;
    return this;
  }

   /**
   * Specifies if the folder can be accessed with the direct shared link or a shared link to a parent folder.
   * @return isAccessibleViaSharedLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "TRUE", value = "Specifies if the folder can be accessed with the direct shared link or a shared link to a parent folder.")

  public IsAccessibleViaSharedLinkEnum getIsAccessibleViaSharedLink() {
    return isAccessibleViaSharedLink;
  }


  public void setIsAccessibleViaSharedLink(IsAccessibleViaSharedLinkEnum isAccessibleViaSharedLink) {
    
    
    
    this.isAccessibleViaSharedLink = isAccessibleViaSharedLink;
  }


  public RecentItemItem allowedInviteeRoles(List<AllowedInviteeRolesEnum> allowedInviteeRoles) {
    
    
    
    
    this.allowedInviteeRoles = allowedInviteeRoles;
    return this;
  }

  public RecentItemItem addAllowedInviteeRolesItem(AllowedInviteeRolesEnum allowedInviteeRolesItem) {
    if (this.allowedInviteeRoles == null) {
      this.allowedInviteeRoles = new ArrayList<>();
    }
    this.allowedInviteeRoles.add(allowedInviteeRolesItem);
    return this;
  }

   /**
   * A list of the types of roles that user can be invited at when sharing this folder.
   * @return allowedInviteeRoles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"editor\"]", value = "A list of the types of roles that user can be invited at when sharing this folder.")

  public List<AllowedInviteeRolesEnum> getAllowedInviteeRoles() {
    return allowedInviteeRoles;
  }


  public void setAllowedInviteeRoles(List<AllowedInviteeRolesEnum> allowedInviteeRoles) {
    
    
    
    this.allowedInviteeRoles = allowedInviteeRoles;
  }


  public RecentItemItem isExternallyOwned(Boolean isExternallyOwned) {
    
    
    
    
    this.isExternallyOwned = isExternallyOwned;
    return this;
  }

   /**
   * Specifies if this folder is owned by a user outside of the authenticated enterprise.
   * @return isExternallyOwned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Specifies if this folder is owned by a user outside of the authenticated enterprise.")

  public Boolean getIsExternallyOwned() {
    return isExternallyOwned;
  }


  public void setIsExternallyOwned(Boolean isExternallyOwned) {
    
    
    
    this.isExternallyOwned = isExternallyOwned;
  }


  public RecentItemItem hasCollaborations(Boolean hasCollaborations) {
    
    
    
    
    this.hasCollaborations = hasCollaborations;
    return this;
  }

   /**
   * Specifies if this folder has any other collaborators.
   * @return hasCollaborations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Specifies if this folder has any other collaborators.")

  public Boolean getHasCollaborations() {
    return hasCollaborations;
  }


  public void setHasCollaborations(Boolean hasCollaborations) {
    
    
    
    this.hasCollaborations = hasCollaborations;
  }


  public RecentItemItem metadata(Map metadata) {
    
    
    
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map getMetadata() {
    return metadata;
  }


  public void setMetadata(Map metadata) {
    
    
    
    this.metadata = metadata;
  }


  public RecentItemItem expiresAt(OffsetDateTime expiresAt) {
    
    
    
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * When the file will automatically be deleted
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "When the file will automatically be deleted")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(OffsetDateTime expiresAt) {
    
    
    
    this.expiresAt = expiresAt;
  }


  public RecentItemItem representations(Object representations) {
    
    
    
    
    this.representations = representations;
    return this;
  }

   /**
   * Get representations
   * @return representations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getRepresentations() {
    return representations;
  }


  public void setRepresentations(Object representations) {
    
    
    
    this.representations = representations;
  }


  public RecentItemItem classification(Object classification) {
    
    
    
    
    this.classification = classification;
    return this;
  }

   /**
   * Get classification
   * @return classification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getClassification() {
    return classification;
  }


  public void setClassification(Object classification) {
    
    
    
    this.classification = classification;
  }


  public RecentItemItem uploaderDisplayName(String uploaderDisplayName) {
    
    
    
    
    this.uploaderDisplayName = uploaderDisplayName;
    return this;
  }

   /**
   * Get uploaderDisplayName
   * @return uploaderDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUploaderDisplayName() {
    return uploaderDisplayName;
  }


  public void setUploaderDisplayName(String uploaderDisplayName) {
    
    
    
    this.uploaderDisplayName = uploaderDisplayName;
  }


  public RecentItemItem dispositionAt(OffsetDateTime dispositionAt) {
    
    
    
    
    this.dispositionAt = dispositionAt;
    return this;
  }

   /**
   * The retention expiration timestamp for the given file
   * @return dispositionAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "The retention expiration timestamp for the given file")

  public OffsetDateTime getDispositionAt() {
    return dispositionAt;
  }


  public void setDispositionAt(OffsetDateTime dispositionAt) {
    
    
    
    this.dispositionAt = dispositionAt;
  }


  public RecentItemItem sharedLinkPermissionOptions(List<SharedLinkPermissionOptionsEnum> sharedLinkPermissionOptions) {
    
    
    
    
    this.sharedLinkPermissionOptions = sharedLinkPermissionOptions;
    return this;
  }

  public RecentItemItem addSharedLinkPermissionOptionsItem(SharedLinkPermissionOptionsEnum sharedLinkPermissionOptionsItem) {
    if (this.sharedLinkPermissionOptions == null) {
      this.sharedLinkPermissionOptions = new ArrayList<>();
    }
    this.sharedLinkPermissionOptions.add(sharedLinkPermissionOptionsItem);
    return this;
  }

   /**
   * A list of the types of roles that user can be invited at when sharing this file.
   * @return sharedLinkPermissionOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"can_preview\"]", value = "A list of the types of roles that user can be invited at when sharing this file.")

  public List<SharedLinkPermissionOptionsEnum> getSharedLinkPermissionOptions() {
    return sharedLinkPermissionOptions;
  }


  public void setSharedLinkPermissionOptions(List<SharedLinkPermissionOptionsEnum> sharedLinkPermissionOptions) {
    
    
    
    this.sharedLinkPermissionOptions = sharedLinkPermissionOptions;
  }


  public RecentItemItem folderUploadEmail(FolderAllOfFolderUploadEmail folderUploadEmail) {
    
    
    
    
    this.folderUploadEmail = folderUploadEmail;
    return this;
  }

   /**
   * Get folderUploadEmail
   * @return folderUploadEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FolderAllOfFolderUploadEmail getFolderUploadEmail() {
    return folderUploadEmail;
  }


  public void setFolderUploadEmail(FolderAllOfFolderUploadEmail folderUploadEmail) {
    
    
    
    this.folderUploadEmail = folderUploadEmail;
  }


  public RecentItemItem itemCollection(Items itemCollection) {
    
    
    
    
    this.itemCollection = itemCollection;
    return this;
  }

   /**
   * Get itemCollection
   * @return itemCollection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Items getItemCollection() {
    return itemCollection;
  }


  public void setItemCollection(Items itemCollection) {
    
    
    
    this.itemCollection = itemCollection;
  }


  public RecentItemItem syncState(String syncState) {
    
    
    
    
    this.syncState = syncState;
    return this;
  }

   /**
   * Get syncState
   * @return syncState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSyncState() {
    return syncState;
  }


  public void setSyncState(String syncState) {
    
    
    
    this.syncState = syncState;
  }


  public RecentItemItem canNonOwnersInvite(Boolean canNonOwnersInvite) {
    
    
    
    
    this.canNonOwnersInvite = canNonOwnersInvite;
    return this;
  }

   /**
   * Get canNonOwnersInvite
   * @return canNonOwnersInvite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanNonOwnersInvite() {
    return canNonOwnersInvite;
  }


  public void setCanNonOwnersInvite(Boolean canNonOwnersInvite) {
    
    
    
    this.canNonOwnersInvite = canNonOwnersInvite;
  }


  public RecentItemItem isCollaborationRestrictedToEnterprise(Boolean isCollaborationRestrictedToEnterprise) {
    
    
    
    
    this.isCollaborationRestrictedToEnterprise = isCollaborationRestrictedToEnterprise;
    return this;
  }

   /**
   * Get isCollaborationRestrictedToEnterprise
   * @return isCollaborationRestrictedToEnterprise
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsCollaborationRestrictedToEnterprise() {
    return isCollaborationRestrictedToEnterprise;
  }


  public void setIsCollaborationRestrictedToEnterprise(Boolean isCollaborationRestrictedToEnterprise) {
    
    
    
    this.isCollaborationRestrictedToEnterprise = isCollaborationRestrictedToEnterprise;
  }


  public RecentItemItem allowedSharedLinkAccessLevels(List<AllowedSharedLinkAccessLevelsEnum> allowedSharedLinkAccessLevels) {
    
    
    
    
    this.allowedSharedLinkAccessLevels = allowedSharedLinkAccessLevels;
    return this;
  }

  public RecentItemItem addAllowedSharedLinkAccessLevelsItem(AllowedSharedLinkAccessLevelsEnum allowedSharedLinkAccessLevelsItem) {
    if (this.allowedSharedLinkAccessLevels == null) {
      this.allowedSharedLinkAccessLevels = new ArrayList<>();
    }
    this.allowedSharedLinkAccessLevels.add(allowedSharedLinkAccessLevelsItem);
    return this;
  }

   /**
   * A list of access levels that are available for this folder.  For some folders, like the root folder, this will always be an empty list as sharing is not allowed at that level.
   * @return allowedSharedLinkAccessLevels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"open\"]", value = "A list of access levels that are available for this folder.  For some folders, like the root folder, this will always be an empty list as sharing is not allowed at that level.")

  public List<AllowedSharedLinkAccessLevelsEnum> getAllowedSharedLinkAccessLevels() {
    return allowedSharedLinkAccessLevels;
  }


  public void setAllowedSharedLinkAccessLevels(List<AllowedSharedLinkAccessLevelsEnum> allowedSharedLinkAccessLevels) {
    
    
    
    this.allowedSharedLinkAccessLevels = allowedSharedLinkAccessLevels;
  }


  public RecentItemItem canNonOwnersViewCollaborators(Boolean canNonOwnersViewCollaborators) {
    
    
    
    
    this.canNonOwnersViewCollaborators = canNonOwnersViewCollaborators;
    return this;
  }

   /**
   * Specifies if collaborators who are not owners of this folder are restricted from viewing other collaborations on this folder.  It also restricts non-owners from inviting new collaborators.
   * @return canNonOwnersViewCollaborators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Specifies if collaborators who are not owners of this folder are restricted from viewing other collaborations on this folder.  It also restricts non-owners from inviting new collaborators.")

  public Boolean getCanNonOwnersViewCollaborators() {
    return canNonOwnersViewCollaborators;
  }


  public void setCanNonOwnersViewCollaborators(Boolean canNonOwnersViewCollaborators) {
    
    
    
    this.canNonOwnersViewCollaborators = canNonOwnersViewCollaborators;
  }


  public RecentItemItem url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * The URL this web link points to
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/example/1234", value = "The URL this web link points to")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the RecentItemItem instance itself
   */
  public RecentItemItem putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecentItemItem recentItemItem = (RecentItemItem) o;
    return Objects.equals(this.id, recentItemItem.id) &&
        Objects.equals(this.etag, recentItemItem.etag) &&
        Objects.equals(this.type, recentItemItem.type) &&
        Objects.equals(this.sequenceId, recentItemItem.sequenceId) &&
        Objects.equals(this.name, recentItemItem.name) &&
        Objects.equals(this.sha1, recentItemItem.sha1) &&
        Objects.equals(this.fileVersion, recentItemItem.fileVersion) &&
        Objects.equals(this.description, recentItemItem.description) &&
        Objects.equals(this.size, recentItemItem.size) &&
        Objects.equals(this.pathCollection, recentItemItem.pathCollection) &&
        Objects.equals(this.createdAt, recentItemItem.createdAt) &&
        Objects.equals(this.modifiedAt, recentItemItem.modifiedAt) &&
        Objects.equals(this.trashedAt, recentItemItem.trashedAt) &&
        Objects.equals(this.purgedAt, recentItemItem.purgedAt) &&
        Objects.equals(this.contentCreatedAt, recentItemItem.contentCreatedAt) &&
        Objects.equals(this.contentModifiedAt, recentItemItem.contentModifiedAt) &&
        Objects.equals(this.createdBy, recentItemItem.createdBy) &&
        Objects.equals(this.modifiedBy, recentItemItem.modifiedBy) &&
        Objects.equals(this.ownedBy, recentItemItem.ownedBy) &&
        Objects.equals(this.sharedLink, recentItemItem.sharedLink) &&
        Objects.equals(this.parent, recentItemItem.parent) &&
        Objects.equals(this.itemStatus, recentItemItem.itemStatus) &&
        Objects.equals(this.tags, recentItemItem.tags) &&
        Objects.equals(this.versionNumber, recentItemItem.versionNumber) &&
        Objects.equals(this.commentCount, recentItemItem.commentCount) &&
        Objects.equals(this.permissions, recentItemItem.permissions) &&
        Objects.equals(this.lock, recentItemItem.lock) &&
        Objects.equals(this.extension, recentItemItem.extension) &&
        Objects.equals(this.isPackage, recentItemItem.isPackage) &&
        Objects.equals(this.expiringEmbedLink, recentItemItem.expiringEmbedLink) &&
        Objects.equals(this.watermarkInfo, recentItemItem.watermarkInfo) &&
        Objects.equals(this.isAccessibleViaSharedLink, recentItemItem.isAccessibleViaSharedLink) &&
        Objects.equals(this.allowedInviteeRoles, recentItemItem.allowedInviteeRoles) &&
        Objects.equals(this.isExternallyOwned, recentItemItem.isExternallyOwned) &&
        Objects.equals(this.hasCollaborations, recentItemItem.hasCollaborations) &&
        Objects.equals(this.metadata, recentItemItem.metadata) &&
        Objects.equals(this.expiresAt, recentItemItem.expiresAt) &&
        Objects.equals(this.representations, recentItemItem.representations) &&
        Objects.equals(this.classification, recentItemItem.classification) &&
        Objects.equals(this.uploaderDisplayName, recentItemItem.uploaderDisplayName) &&
        Objects.equals(this.dispositionAt, recentItemItem.dispositionAt) &&
        Objects.equals(this.sharedLinkPermissionOptions, recentItemItem.sharedLinkPermissionOptions) &&
        Objects.equals(this.folderUploadEmail, recentItemItem.folderUploadEmail) &&
        Objects.equals(this.itemCollection, recentItemItem.itemCollection) &&
        Objects.equals(this.syncState, recentItemItem.syncState) &&
        Objects.equals(this.canNonOwnersInvite, recentItemItem.canNonOwnersInvite) &&
        Objects.equals(this.isCollaborationRestrictedToEnterprise, recentItemItem.isCollaborationRestrictedToEnterprise) &&
        Objects.equals(this.allowedSharedLinkAccessLevels, recentItemItem.allowedSharedLinkAccessLevels) &&
        Objects.equals(this.canNonOwnersViewCollaborators, recentItemItem.canNonOwnersViewCollaborators) &&
        Objects.equals(this.url, recentItemItem.url)&&
        Objects.equals(this.additionalProperties, recentItemItem.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, etag, type, sequenceId, name, sha1, fileVersion, description, size, pathCollection, createdAt, modifiedAt, trashedAt, purgedAt, contentCreatedAt, contentModifiedAt, createdBy, modifiedBy, ownedBy, sharedLink, parent, itemStatus, tags, versionNumber, commentCount, permissions, lock, extension, isPackage, expiringEmbedLink, watermarkInfo, isAccessibleViaSharedLink, allowedInviteeRoles, isExternallyOwned, hasCollaborations, metadata, expiresAt, representations, classification, uploaderDisplayName, dispositionAt, sharedLinkPermissionOptions, folderUploadEmail, itemCollection, syncState, canNonOwnersInvite, isCollaborationRestrictedToEnterprise, allowedSharedLinkAccessLevels, canNonOwnersViewCollaborators, url, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecentItemItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    sequenceId: ").append(toIndentedString(sequenceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sha1: ").append(toIndentedString(sha1)).append("\n");
    sb.append("    fileVersion: ").append(toIndentedString(fileVersion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    pathCollection: ").append(toIndentedString(pathCollection)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    trashedAt: ").append(toIndentedString(trashedAt)).append("\n");
    sb.append("    purgedAt: ").append(toIndentedString(purgedAt)).append("\n");
    sb.append("    contentCreatedAt: ").append(toIndentedString(contentCreatedAt)).append("\n");
    sb.append("    contentModifiedAt: ").append(toIndentedString(contentModifiedAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    ownedBy: ").append(toIndentedString(ownedBy)).append("\n");
    sb.append("    sharedLink: ").append(toIndentedString(sharedLink)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    itemStatus: ").append(toIndentedString(itemStatus)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    lock: ").append(toIndentedString(lock)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    isPackage: ").append(toIndentedString(isPackage)).append("\n");
    sb.append("    expiringEmbedLink: ").append(toIndentedString(expiringEmbedLink)).append("\n");
    sb.append("    watermarkInfo: ").append(toIndentedString(watermarkInfo)).append("\n");
    sb.append("    isAccessibleViaSharedLink: ").append(toIndentedString(isAccessibleViaSharedLink)).append("\n");
    sb.append("    allowedInviteeRoles: ").append(toIndentedString(allowedInviteeRoles)).append("\n");
    sb.append("    isExternallyOwned: ").append(toIndentedString(isExternallyOwned)).append("\n");
    sb.append("    hasCollaborations: ").append(toIndentedString(hasCollaborations)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    representations: ").append(toIndentedString(representations)).append("\n");
    sb.append("    classification: ").append(toIndentedString(classification)).append("\n");
    sb.append("    uploaderDisplayName: ").append(toIndentedString(uploaderDisplayName)).append("\n");
    sb.append("    dispositionAt: ").append(toIndentedString(dispositionAt)).append("\n");
    sb.append("    sharedLinkPermissionOptions: ").append(toIndentedString(sharedLinkPermissionOptions)).append("\n");
    sb.append("    folderUploadEmail: ").append(toIndentedString(folderUploadEmail)).append("\n");
    sb.append("    itemCollection: ").append(toIndentedString(itemCollection)).append("\n");
    sb.append("    syncState: ").append(toIndentedString(syncState)).append("\n");
    sb.append("    canNonOwnersInvite: ").append(toIndentedString(canNonOwnersInvite)).append("\n");
    sb.append("    isCollaborationRestrictedToEnterprise: ").append(toIndentedString(isCollaborationRestrictedToEnterprise)).append("\n");
    sb.append("    allowedSharedLinkAccessLevels: ").append(toIndentedString(allowedSharedLinkAccessLevels)).append("\n");
    sb.append("    canNonOwnersViewCollaborators: ").append(toIndentedString(canNonOwnersViewCollaborators)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("etag");
    openapiFields.add("type");
    openapiFields.add("sequence_id");
    openapiFields.add("name");
    openapiFields.add("sha1");
    openapiFields.add("file_version");
    openapiFields.add("description");
    openapiFields.add("size");
    openapiFields.add("path_collection");
    openapiFields.add("created_at");
    openapiFields.add("modified_at");
    openapiFields.add("trashed_at");
    openapiFields.add("purged_at");
    openapiFields.add("content_created_at");
    openapiFields.add("content_modified_at");
    openapiFields.add("created_by");
    openapiFields.add("modified_by");
    openapiFields.add("owned_by");
    openapiFields.add("shared_link");
    openapiFields.add("parent");
    openapiFields.add("item_status");
    openapiFields.add("tags");
    openapiFields.add("version_number");
    openapiFields.add("comment_count");
    openapiFields.add("permissions");
    openapiFields.add("lock");
    openapiFields.add("extension");
    openapiFields.add("is_package");
    openapiFields.add("expiring_embed_link");
    openapiFields.add("watermark_info");
    openapiFields.add("is_accessible_via_shared_link");
    openapiFields.add("allowed_invitee_roles");
    openapiFields.add("is_externally_owned");
    openapiFields.add("has_collaborations");
    openapiFields.add("metadata");
    openapiFields.add("expires_at");
    openapiFields.add("representations");
    openapiFields.add("classification");
    openapiFields.add("uploader_display_name");
    openapiFields.add("disposition_at");
    openapiFields.add("shared_link_permission_options");
    openapiFields.add("folder_upload_email");
    openapiFields.add("item_collection");
    openapiFields.add("sync_state");
    openapiFields.add("can_non_owners_invite");
    openapiFields.add("is_collaboration_restricted_to_enterprise");
    openapiFields.add("allowed_shared_link_access_levels");
    openapiFields.add("can_non_owners_view_collaborators");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("type");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RecentItemItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RecentItemItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecentItemItem is not found in the empty JSON string", RecentItemItem.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RecentItemItem.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `sequence_id`
      if (jsonObj.get("sequence_id") != null && !jsonObj.get("sequence_id").isJsonNull()) {
        String.validateJsonObject(jsonObj.getAsJsonObject("sequence_id"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("sha1") != null && !jsonObj.get("sha1").isJsonNull()) && !jsonObj.get("sha1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sha1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sha1").toString()));
      }
      // validate the optional field `file_version`
      if (jsonObj.get("file_version") != null && !jsonObj.get("file_version").isJsonNull()) {
        FileVersionMini.validateJsonObject(jsonObj.getAsJsonObject("file_version"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `path_collection`
      if (jsonObj.get("path_collection") != null && !jsonObj.get("path_collection").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("path_collection"));
      }
      // validate the optional field `created_by`
      if (jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) {
        UserMini.validateJsonObject(jsonObj.getAsJsonObject("created_by"));
      }
      // validate the optional field `modified_by`
      if (jsonObj.get("modified_by") != null && !jsonObj.get("modified_by").isJsonNull()) {
        UserMini.validateJsonObject(jsonObj.getAsJsonObject("modified_by"));
      }
      // validate the optional field `owned_by`
      if (jsonObj.get("owned_by") != null && !jsonObj.get("owned_by").isJsonNull()) {
        UserMini.validateJsonObject(jsonObj.getAsJsonObject("owned_by"));
      }
      // validate the optional field `shared_link`
      if (jsonObj.get("shared_link") != null && !jsonObj.get("shared_link").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("shared_link"));
      }
      // validate the optional field `parent`
      if (jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) {
        FolderMini.validateJsonObject(jsonObj.getAsJsonObject("parent"));
      }
      if ((jsonObj.get("item_status") != null && !jsonObj.get("item_status").isJsonNull()) && !jsonObj.get("item_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_status").toString()));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        List.validateJsonObject(jsonObj.getAsJsonObject("tags"));
      }
      if ((jsonObj.get("version_number") != null && !jsonObj.get("version_number").isJsonNull()) && !jsonObj.get("version_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version_number").toString()));
      }
      // validate the optional field `permissions`
      if (jsonObj.get("permissions") != null && !jsonObj.get("permissions").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("permissions"));
      }
      // validate the optional field `lock`
      if (jsonObj.get("lock") != null && !jsonObj.get("lock").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("lock"));
      }
      if ((jsonObj.get("extension") != null && !jsonObj.get("extension").isJsonNull()) && !jsonObj.get("extension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extension").toString()));
      }
      // validate the optional field `expiring_embed_link`
      if (jsonObj.get("expiring_embed_link") != null && !jsonObj.get("expiring_embed_link").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("expiring_embed_link"));
      }
      // validate the optional field `watermark_info`
      if (jsonObj.get("watermark_info") != null && !jsonObj.get("watermark_info").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("watermark_info"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_invitee_roles") != null && !jsonObj.get("allowed_invitee_roles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_invitee_roles` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_invitee_roles").toString()));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        Map.validateJsonObject(jsonObj.getAsJsonObject("metadata"));
      }
      // validate the optional field `representations`
      if (jsonObj.get("representations") != null && !jsonObj.get("representations").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("representations"));
      }
      // validate the optional field `classification`
      if (jsonObj.get("classification") != null && !jsonObj.get("classification").isJsonNull()) {
        Object.validateJsonObject(jsonObj.getAsJsonObject("classification"));
      }
      // validate the optional field `uploader_display_name`
      if (jsonObj.get("uploader_display_name") != null && !jsonObj.get("uploader_display_name").isJsonNull()) {
        String.validateJsonObject(jsonObj.getAsJsonObject("uploader_display_name"));
      }
      // ensure the optional json data is an array if present (nullable)
      if (jsonObj.get("shared_link_permission_options") != null && !jsonObj.get("shared_link_permission_options").isJsonNull() && !jsonObj.get("shared_link_permission_options").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `shared_link_permission_options` to be an array in the JSON string or null but got `%s`", jsonObj.get("shared_link_permission_options").toString()));
      }
      // validate the optional field `folder_upload_email`
      if (jsonObj.get("folder_upload_email") != null && !jsonObj.get("folder_upload_email").isJsonNull()) {
        FolderAllOfFolderUploadEmail.validateJsonObject(jsonObj.getAsJsonObject("folder_upload_email"));
      }
      // validate the optional field `item_collection`
      if (jsonObj.get("item_collection") != null && !jsonObj.get("item_collection").isJsonNull()) {
        Items.validateJsonObject(jsonObj.getAsJsonObject("item_collection"));
      }
      // validate the optional field `sync_state`
      if (jsonObj.get("sync_state") != null && !jsonObj.get("sync_state").isJsonNull()) {
        String.validateJsonObject(jsonObj.getAsJsonObject("sync_state"));
      }
      // validate the optional field `can_non_owners_invite`
      if (jsonObj.get("can_non_owners_invite") != null && !jsonObj.get("can_non_owners_invite").isJsonNull()) {
        Boolean.validateJsonObject(jsonObj.getAsJsonObject("can_non_owners_invite"));
      }
      // validate the optional field `is_collaboration_restricted_to_enterprise`
      if (jsonObj.get("is_collaboration_restricted_to_enterprise") != null && !jsonObj.get("is_collaboration_restricted_to_enterprise").isJsonNull()) {
        Boolean.validateJsonObject(jsonObj.getAsJsonObject("is_collaboration_restricted_to_enterprise"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_shared_link_access_levels") != null && !jsonObj.get("allowed_shared_link_access_levels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_shared_link_access_levels` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_shared_link_access_levels").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecentItemItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecentItemItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecentItemItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecentItemItem.class));

       return (TypeAdapter<T>) new TypeAdapter<RecentItemItem>() {
           @Override
           public void write(JsonWriter out, RecentItemItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public RecentItemItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             RecentItemItem instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RecentItemItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RecentItemItem
  * @throws IOException if the JSON string is invalid with respect to RecentItemItem
  */
  public static RecentItemItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecentItemItem.class);
  }

 /**
  * Convert an instance of RecentItemItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

