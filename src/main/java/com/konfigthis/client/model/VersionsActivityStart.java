/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.FaFileVersionCreatedBy;
import com.konfigthis.client.model.FaFileVersionRestoredBy;
import com.konfigthis.client.model.FaFileVersionTrashedBy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * VersionsActivityStart
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class VersionsActivityStart {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private FaFileVersionCreatedBy createdBy;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Integer number;

  public static final String SERIALIZED_NAME_RESTORED_AT = "restored_at";
  @SerializedName(SERIALIZED_NAME_RESTORED_AT)
  private OffsetDateTime restoredAt;

  public static final String SERIALIZED_NAME_RESTORED_BY = "restored_by";
  @SerializedName(SERIALIZED_NAME_RESTORED_BY)
  private FaFileVersionRestoredBy restoredBy;

  public static final String SERIALIZED_NAME_TRASHED_AT = "trashed_at";
  @SerializedName(SERIALIZED_NAME_TRASHED_AT)
  private OffsetDateTime trashedAt;

  public static final String SERIALIZED_NAME_TRASHED_BY = "trashed_by";
  @SerializedName(SERIALIZED_NAME_TRASHED_BY)
  private FaFileVersionTrashedBy trashedBy;

  /**
   * &#x60;file_version&#x60;
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    FILE_VERSION("file_version");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public VersionsActivityStart() {
  }

  public VersionsActivityStart createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When the &#x60;file_version&#x60; object was created.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "When the `file_version` object was created.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public VersionsActivityStart createdBy(FaFileVersionCreatedBy createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FaFileVersionCreatedBy getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(FaFileVersionCreatedBy createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public VersionsActivityStart id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier that represent a file version.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "12345", required = true, value = "The unique identifier that represent a file version.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public VersionsActivityStart number(Integer number) {
    
    
    
    
    this.number = number;
    return this;
  }

   /**
   * Version number.
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version number.")

  public Integer getNumber() {
    return number;
  }


  public void setNumber(Integer number) {
    
    
    
    this.number = number;
  }


  public VersionsActivityStart restoredAt(OffsetDateTime restoredAt) {
    
    
    
    
    this.restoredAt = restoredAt;
    return this;
  }

   /**
   * When the &#x60;file_version&#x60; object was restored.
   * @return restoredAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When the `file_version` object was restored.")

  public OffsetDateTime getRestoredAt() {
    return restoredAt;
  }


  public void setRestoredAt(OffsetDateTime restoredAt) {
    
    
    
    this.restoredAt = restoredAt;
  }


  public VersionsActivityStart restoredBy(FaFileVersionRestoredBy restoredBy) {
    
    
    
    
    this.restoredBy = restoredBy;
    return this;
  }

   /**
   * Get restoredBy
   * @return restoredBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FaFileVersionRestoredBy getRestoredBy() {
    return restoredBy;
  }


  public void setRestoredBy(FaFileVersionRestoredBy restoredBy) {
    
    
    
    this.restoredBy = restoredBy;
  }


  public VersionsActivityStart trashedAt(OffsetDateTime trashedAt) {
    
    
    
    
    this.trashedAt = trashedAt;
    return this;
  }

   /**
   * When the &#x60;file_version&#x60; object was trashed.
   * @return trashedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2012-12-12T10:53:43-08:00", value = "When the `file_version` object was trashed.")

  public OffsetDateTime getTrashedAt() {
    return trashedAt;
  }


  public void setTrashedAt(OffsetDateTime trashedAt) {
    
    
    
    this.trashedAt = trashedAt;
  }


  public VersionsActivityStart trashedBy(FaFileVersionTrashedBy trashedBy) {
    
    
    
    
    this.trashedBy = trashedBy;
    return this;
  }

   /**
   * Get trashedBy
   * @return trashedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FaFileVersionTrashedBy getTrashedBy() {
    return trashedBy;
  }


  public void setTrashedBy(FaFileVersionTrashedBy trashedBy) {
    
    
    
    this.trashedBy = trashedBy;
  }


  public VersionsActivityStart type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * &#x60;file_version&#x60;
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FILE_VERSION", value = "`file_version`")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the VersionsActivityStart instance itself
   */
  public VersionsActivityStart putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionsActivityStart versionsActivityStart = (VersionsActivityStart) o;
    return Objects.equals(this.createdAt, versionsActivityStart.createdAt) &&
        Objects.equals(this.createdBy, versionsActivityStart.createdBy) &&
        Objects.equals(this.id, versionsActivityStart.id) &&
        Objects.equals(this.number, versionsActivityStart.number) &&
        Objects.equals(this.restoredAt, versionsActivityStart.restoredAt) &&
        Objects.equals(this.restoredBy, versionsActivityStart.restoredBy) &&
        Objects.equals(this.trashedAt, versionsActivityStart.trashedAt) &&
        Objects.equals(this.trashedBy, versionsActivityStart.trashedBy) &&
        Objects.equals(this.type, versionsActivityStart.type)&&
        Objects.equals(this.additionalProperties, versionsActivityStart.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, createdBy, id, number, restoredAt, restoredBy, trashedAt, trashedBy, type, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionsActivityStart {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    restoredAt: ").append(toIndentedString(restoredAt)).append("\n");
    sb.append("    restoredBy: ").append(toIndentedString(restoredBy)).append("\n");
    sb.append("    trashedAt: ").append(toIndentedString(trashedAt)).append("\n");
    sb.append("    trashedBy: ").append(toIndentedString(trashedBy)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("created_by");
    openapiFields.add("id");
    openapiFields.add("number");
    openapiFields.add("restored_at");
    openapiFields.add("restored_by");
    openapiFields.add("trashed_at");
    openapiFields.add("trashed_by");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VersionsActivityStart
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!VersionsActivityStart.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VersionsActivityStart is not found in the empty JSON string", VersionsActivityStart.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VersionsActivityStart.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `created_by`
      if (jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) {
        FaFileVersionCreatedBy.validateJsonObject(jsonObj.getAsJsonObject("created_by"));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `restored_by`
      if (jsonObj.get("restored_by") != null && !jsonObj.get("restored_by").isJsonNull()) {
        FaFileVersionRestoredBy.validateJsonObject(jsonObj.getAsJsonObject("restored_by"));
      }
      // validate the optional field `trashed_by`
      if (jsonObj.get("trashed_by") != null && !jsonObj.get("trashed_by").isJsonNull()) {
        FaFileVersionTrashedBy.validateJsonObject(jsonObj.getAsJsonObject("trashed_by"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VersionsActivityStart.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VersionsActivityStart' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VersionsActivityStart> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VersionsActivityStart.class));

       return (TypeAdapter<T>) new TypeAdapter<VersionsActivityStart>() {
           @Override
           public void write(JsonWriter out, VersionsActivityStart value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public VersionsActivityStart read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             VersionsActivityStart instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VersionsActivityStart given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VersionsActivityStart
  * @throws IOException if the JSON string is invalid with respect to VersionsActivityStart
  */
  public static VersionsActivityStart fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VersionsActivityStart.class);
  }

 /**
  * Convert an instance of VersionsActivityStart to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

